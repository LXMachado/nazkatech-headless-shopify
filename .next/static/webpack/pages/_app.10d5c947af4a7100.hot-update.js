/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "(pages-dir-browser)/./node_modules/next/dist/compiled/buffer/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/compiled/buffer/index.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={675:function(e,r){\"use strict\";r.byteLength=byteLength;r.toByteArray=toByteArray;r.fromByteArray=fromByteArray;var t=[];var f=[];var n=typeof Uint8Array!==\"undefined\"?Uint8Array:Array;var i=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";for(var o=0,u=i.length;o<u;++o){t[o]=i[o];f[i.charCodeAt(o)]=o}f[\"-\".charCodeAt(0)]=62;f[\"_\".charCodeAt(0)]=63;function getLens(e){var r=e.length;if(r%4>0){throw new Error(\"Invalid string. Length must be a multiple of 4\")}var t=e.indexOf(\"=\");if(t===-1)t=r;var f=t===r?0:4-t%4;return[t,f]}function byteLength(e){var r=getLens(e);var t=r[0];var f=r[1];return(t+f)*3/4-f}function _byteLength(e,r,t){return(r+t)*3/4-t}function toByteArray(e){var r;var t=getLens(e);var i=t[0];var o=t[1];var u=new n(_byteLength(e,i,o));var a=0;var s=o>0?i-4:i;var h;for(h=0;h<s;h+=4){r=f[e.charCodeAt(h)]<<18|f[e.charCodeAt(h+1)]<<12|f[e.charCodeAt(h+2)]<<6|f[e.charCodeAt(h+3)];u[a++]=r>>16&255;u[a++]=r>>8&255;u[a++]=r&255}if(o===2){r=f[e.charCodeAt(h)]<<2|f[e.charCodeAt(h+1)]>>4;u[a++]=r&255}if(o===1){r=f[e.charCodeAt(h)]<<10|f[e.charCodeAt(h+1)]<<4|f[e.charCodeAt(h+2)]>>2;u[a++]=r>>8&255;u[a++]=r&255}return u}function tripletToBase64(e){return t[e>>18&63]+t[e>>12&63]+t[e>>6&63]+t[e&63]}function encodeChunk(e,r,t){var f;var n=[];for(var i=r;i<t;i+=3){f=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(e[i+2]&255);n.push(tripletToBase64(f))}return n.join(\"\")}function fromByteArray(e){var r;var f=e.length;var n=f%3;var i=[];var o=16383;for(var u=0,a=f-n;u<a;u+=o){i.push(encodeChunk(e,u,u+o>a?a:u+o))}if(n===1){r=e[f-1];i.push(t[r>>2]+t[r<<4&63]+\"==\")}else if(n===2){r=(e[f-2]<<8)+e[f-1];i.push(t[r>>10]+t[r>>4&63]+t[r<<2&63]+\"=\")}return i.join(\"\")}},72:function(e,r,t){\"use strict\";\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */var f=t(675);var n=t(783);var i=typeof Symbol===\"function\"&&typeof Symbol.for===\"function\"?Symbol.for(\"nodejs.util.inspect.custom\"):null;r.Buffer=Buffer;r.SlowBuffer=SlowBuffer;r.INSPECT_MAX_BYTES=50;var o=2147483647;r.kMaxLength=o;Buffer.TYPED_ARRAY_SUPPORT=typedArraySupport();if(!Buffer.TYPED_ARRAY_SUPPORT&&typeof console!==\"undefined\"&&typeof console.error===\"function\"){console.error(\"This browser lacks typed array (Uint8Array) support which is required by \"+\"`buffer` v5.x. Use `buffer` v4.x if you require old browser support.\")}function typedArraySupport(){try{var e=new Uint8Array(1);var r={foo:function(){return 42}};Object.setPrototypeOf(r,Uint8Array.prototype);Object.setPrototypeOf(e,r);return e.foo()===42}catch(e){return false}}Object.defineProperty(Buffer.prototype,\"parent\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.buffer}});Object.defineProperty(Buffer.prototype,\"offset\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.byteOffset}});function createBuffer(e){if(e>o){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}var r=new Uint8Array(e);Object.setPrototypeOf(r,Buffer.prototype);return r}function Buffer(e,r,t){if(typeof e===\"number\"){if(typeof r===\"string\"){throw new TypeError('The \"string\" argument must be of type string. Received type number')}return allocUnsafe(e)}return from(e,r,t)}Buffer.poolSize=8192;function from(e,r,t){if(typeof e===\"string\"){return fromString(e,r)}if(ArrayBuffer.isView(e)){return fromArrayLike(e)}if(e==null){throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}if(isInstance(e,ArrayBuffer)||e&&isInstance(e.buffer,ArrayBuffer)){return fromArrayBuffer(e,r,t)}if(typeof SharedArrayBuffer!==\"undefined\"&&(isInstance(e,SharedArrayBuffer)||e&&isInstance(e.buffer,SharedArrayBuffer))){return fromArrayBuffer(e,r,t)}if(typeof e===\"number\"){throw new TypeError('The \"value\" argument must not be of type number. Received type number')}var f=e.valueOf&&e.valueOf();if(f!=null&&f!==e){return Buffer.from(f,r,t)}var n=fromObject(e);if(n)return n;if(typeof Symbol!==\"undefined\"&&Symbol.toPrimitive!=null&&typeof e[Symbol.toPrimitive]===\"function\"){return Buffer.from(e[Symbol.toPrimitive](\"string\"),r,t)}throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}Buffer.from=function(e,r,t){return from(e,r,t)};Object.setPrototypeOf(Buffer.prototype,Uint8Array.prototype);Object.setPrototypeOf(Buffer,Uint8Array);function assertSize(e){if(typeof e!==\"number\"){throw new TypeError('\"size\" argument must be of type number')}else if(e<0){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}}function alloc(e,r,t){assertSize(e);if(e<=0){return createBuffer(e)}if(r!==undefined){return typeof t===\"string\"?createBuffer(e).fill(r,t):createBuffer(e).fill(r)}return createBuffer(e)}Buffer.alloc=function(e,r,t){return alloc(e,r,t)};function allocUnsafe(e){assertSize(e);return createBuffer(e<0?0:checked(e)|0)}Buffer.allocUnsafe=function(e){return allocUnsafe(e)};Buffer.allocUnsafeSlow=function(e){return allocUnsafe(e)};function fromString(e,r){if(typeof r!==\"string\"||r===\"\"){r=\"utf8\"}if(!Buffer.isEncoding(r)){throw new TypeError(\"Unknown encoding: \"+r)}var t=byteLength(e,r)|0;var f=createBuffer(t);var n=f.write(e,r);if(n!==t){f=f.slice(0,n)}return f}function fromArrayLike(e){var r=e.length<0?0:checked(e.length)|0;var t=createBuffer(r);for(var f=0;f<r;f+=1){t[f]=e[f]&255}return t}function fromArrayBuffer(e,r,t){if(r<0||e.byteLength<r){throw new RangeError('\"offset\" is outside of buffer bounds')}if(e.byteLength<r+(t||0)){throw new RangeError('\"length\" is outside of buffer bounds')}var f;if(r===undefined&&t===undefined){f=new Uint8Array(e)}else if(t===undefined){f=new Uint8Array(e,r)}else{f=new Uint8Array(e,r,t)}Object.setPrototypeOf(f,Buffer.prototype);return f}function fromObject(e){if(Buffer.isBuffer(e)){var r=checked(e.length)|0;var t=createBuffer(r);if(t.length===0){return t}e.copy(t,0,0,r);return t}if(e.length!==undefined){if(typeof e.length!==\"number\"||numberIsNaN(e.length)){return createBuffer(0)}return fromArrayLike(e)}if(e.type===\"Buffer\"&&Array.isArray(e.data)){return fromArrayLike(e.data)}}function checked(e){if(e>=o){throw new RangeError(\"Attempt to allocate Buffer larger than maximum \"+\"size: 0x\"+o.toString(16)+\" bytes\")}return e|0}function SlowBuffer(e){if(+e!=e){e=0}return Buffer.alloc(+e)}Buffer.isBuffer=function isBuffer(e){return e!=null&&e._isBuffer===true&&e!==Buffer.prototype};Buffer.compare=function compare(e,r){if(isInstance(e,Uint8Array))e=Buffer.from(e,e.offset,e.byteLength);if(isInstance(r,Uint8Array))r=Buffer.from(r,r.offset,r.byteLength);if(!Buffer.isBuffer(e)||!Buffer.isBuffer(r)){throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array')}if(e===r)return 0;var t=e.length;var f=r.length;for(var n=0,i=Math.min(t,f);n<i;++n){if(e[n]!==r[n]){t=e[n];f=r[n];break}}if(t<f)return-1;if(f<t)return 1;return 0};Buffer.isEncoding=function isEncoding(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return true;default:return false}};Buffer.concat=function concat(e,r){if(!Array.isArray(e)){throw new TypeError('\"list\" argument must be an Array of Buffers')}if(e.length===0){return Buffer.alloc(0)}var t;if(r===undefined){r=0;for(t=0;t<e.length;++t){r+=e[t].length}}var f=Buffer.allocUnsafe(r);var n=0;for(t=0;t<e.length;++t){var i=e[t];if(isInstance(i,Uint8Array)){i=Buffer.from(i)}if(!Buffer.isBuffer(i)){throw new TypeError('\"list\" argument must be an Array of Buffers')}i.copy(f,n);n+=i.length}return f};function byteLength(e,r){if(Buffer.isBuffer(e)){return e.length}if(ArrayBuffer.isView(e)||isInstance(e,ArrayBuffer)){return e.byteLength}if(typeof e!==\"string\"){throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. '+\"Received type \"+typeof e)}var t=e.length;var f=arguments.length>2&&arguments[2]===true;if(!f&&t===0)return 0;var n=false;for(;;){switch(r){case\"ascii\":case\"latin1\":case\"binary\":return t;case\"utf8\":case\"utf-8\":return utf8ToBytes(e).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return t*2;case\"hex\":return t>>>1;case\"base64\":return base64ToBytes(e).length;default:if(n){return f?-1:utf8ToBytes(e).length}r=(\"\"+r).toLowerCase();n=true}}}Buffer.byteLength=byteLength;function slowToString(e,r,t){var f=false;if(r===undefined||r<0){r=0}if(r>this.length){return\"\"}if(t===undefined||t>this.length){t=this.length}if(t<=0){return\"\"}t>>>=0;r>>>=0;if(t<=r){return\"\"}if(!e)e=\"utf8\";while(true){switch(e){case\"hex\":return hexSlice(this,r,t);case\"utf8\":case\"utf-8\":return utf8Slice(this,r,t);case\"ascii\":return asciiSlice(this,r,t);case\"latin1\":case\"binary\":return latin1Slice(this,r,t);case\"base64\":return base64Slice(this,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return utf16leSlice(this,r,t);default:if(f)throw new TypeError(\"Unknown encoding: \"+e);e=(e+\"\").toLowerCase();f=true}}}Buffer.prototype._isBuffer=true;function swap(e,r,t){var f=e[r];e[r]=e[t];e[t]=f}Buffer.prototype.swap16=function swap16(){var e=this.length;if(e%2!==0){throw new RangeError(\"Buffer size must be a multiple of 16-bits\")}for(var r=0;r<e;r+=2){swap(this,r,r+1)}return this};Buffer.prototype.swap32=function swap32(){var e=this.length;if(e%4!==0){throw new RangeError(\"Buffer size must be a multiple of 32-bits\")}for(var r=0;r<e;r+=4){swap(this,r,r+3);swap(this,r+1,r+2)}return this};Buffer.prototype.swap64=function swap64(){var e=this.length;if(e%8!==0){throw new RangeError(\"Buffer size must be a multiple of 64-bits\")}for(var r=0;r<e;r+=8){swap(this,r,r+7);swap(this,r+1,r+6);swap(this,r+2,r+5);swap(this,r+3,r+4)}return this};Buffer.prototype.toString=function toString(){var e=this.length;if(e===0)return\"\";if(arguments.length===0)return utf8Slice(this,0,e);return slowToString.apply(this,arguments)};Buffer.prototype.toLocaleString=Buffer.prototype.toString;Buffer.prototype.equals=function equals(e){if(!Buffer.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");if(this===e)return true;return Buffer.compare(this,e)===0};Buffer.prototype.inspect=function inspect(){var e=\"\";var t=r.INSPECT_MAX_BYTES;e=this.toString(\"hex\",0,t).replace(/(.{2})/g,\"$1 \").trim();if(this.length>t)e+=\" ... \";return\"<Buffer \"+e+\">\"};if(i){Buffer.prototype[i]=Buffer.prototype.inspect}Buffer.prototype.compare=function compare(e,r,t,f,n){if(isInstance(e,Uint8Array)){e=Buffer.from(e,e.offset,e.byteLength)}if(!Buffer.isBuffer(e)){throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. '+\"Received type \"+typeof e)}if(r===undefined){r=0}if(t===undefined){t=e?e.length:0}if(f===undefined){f=0}if(n===undefined){n=this.length}if(r<0||t>e.length||f<0||n>this.length){throw new RangeError(\"out of range index\")}if(f>=n&&r>=t){return 0}if(f>=n){return-1}if(r>=t){return 1}r>>>=0;t>>>=0;f>>>=0;n>>>=0;if(this===e)return 0;var i=n-f;var o=t-r;var u=Math.min(i,o);var a=this.slice(f,n);var s=e.slice(r,t);for(var h=0;h<u;++h){if(a[h]!==s[h]){i=a[h];o=s[h];break}}if(i<o)return-1;if(o<i)return 1;return 0};function bidirectionalIndexOf(e,r,t,f,n){if(e.length===0)return-1;if(typeof t===\"string\"){f=t;t=0}else if(t>2147483647){t=2147483647}else if(t<-2147483648){t=-2147483648}t=+t;if(numberIsNaN(t)){t=n?0:e.length-1}if(t<0)t=e.length+t;if(t>=e.length){if(n)return-1;else t=e.length-1}else if(t<0){if(n)t=0;else return-1}if(typeof r===\"string\"){r=Buffer.from(r,f)}if(Buffer.isBuffer(r)){if(r.length===0){return-1}return arrayIndexOf(e,r,t,f,n)}else if(typeof r===\"number\"){r=r&255;if(typeof Uint8Array.prototype.indexOf===\"function\"){if(n){return Uint8Array.prototype.indexOf.call(e,r,t)}else{return Uint8Array.prototype.lastIndexOf.call(e,r,t)}}return arrayIndexOf(e,[r],t,f,n)}throw new TypeError(\"val must be string, number or Buffer\")}function arrayIndexOf(e,r,t,f,n){var i=1;var o=e.length;var u=r.length;if(f!==undefined){f=String(f).toLowerCase();if(f===\"ucs2\"||f===\"ucs-2\"||f===\"utf16le\"||f===\"utf-16le\"){if(e.length<2||r.length<2){return-1}i=2;o/=2;u/=2;t/=2}}function read(e,r){if(i===1){return e[r]}else{return e.readUInt16BE(r*i)}}var a;if(n){var s=-1;for(a=t;a<o;a++){if(read(e,a)===read(r,s===-1?0:a-s)){if(s===-1)s=a;if(a-s+1===u)return s*i}else{if(s!==-1)a-=a-s;s=-1}}}else{if(t+u>o)t=o-u;for(a=t;a>=0;a--){var h=true;for(var c=0;c<u;c++){if(read(e,a+c)!==read(r,c)){h=false;break}}if(h)return a}}return-1}Buffer.prototype.includes=function includes(e,r,t){return this.indexOf(e,r,t)!==-1};Buffer.prototype.indexOf=function indexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,true)};Buffer.prototype.lastIndexOf=function lastIndexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,false)};function hexWrite(e,r,t,f){t=Number(t)||0;var n=e.length-t;if(!f){f=n}else{f=Number(f);if(f>n){f=n}}var i=r.length;if(f>i/2){f=i/2}for(var o=0;o<f;++o){var u=parseInt(r.substr(o*2,2),16);if(numberIsNaN(u))return o;e[t+o]=u}return o}function utf8Write(e,r,t,f){return blitBuffer(utf8ToBytes(r,e.length-t),e,t,f)}function asciiWrite(e,r,t,f){return blitBuffer(asciiToBytes(r),e,t,f)}function latin1Write(e,r,t,f){return asciiWrite(e,r,t,f)}function base64Write(e,r,t,f){return blitBuffer(base64ToBytes(r),e,t,f)}function ucs2Write(e,r,t,f){return blitBuffer(utf16leToBytes(r,e.length-t),e,t,f)}Buffer.prototype.write=function write(e,r,t,f){if(r===undefined){f=\"utf8\";t=this.length;r=0}else if(t===undefined&&typeof r===\"string\"){f=r;t=this.length;r=0}else if(isFinite(r)){r=r>>>0;if(isFinite(t)){t=t>>>0;if(f===undefined)f=\"utf8\"}else{f=t;t=undefined}}else{throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\")}var n=this.length-r;if(t===undefined||t>n)t=n;if(e.length>0&&(t<0||r<0)||r>this.length){throw new RangeError(\"Attempt to write outside buffer bounds\")}if(!f)f=\"utf8\";var i=false;for(;;){switch(f){case\"hex\":return hexWrite(this,e,r,t);case\"utf8\":case\"utf-8\":return utf8Write(this,e,r,t);case\"ascii\":return asciiWrite(this,e,r,t);case\"latin1\":case\"binary\":return latin1Write(this,e,r,t);case\"base64\":return base64Write(this,e,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return ucs2Write(this,e,r,t);default:if(i)throw new TypeError(\"Unknown encoding: \"+f);f=(\"\"+f).toLowerCase();i=true}}};Buffer.prototype.toJSON=function toJSON(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};function base64Slice(e,r,t){if(r===0&&t===e.length){return f.fromByteArray(e)}else{return f.fromByteArray(e.slice(r,t))}}function utf8Slice(e,r,t){t=Math.min(e.length,t);var f=[];var n=r;while(n<t){var i=e[n];var o=null;var u=i>239?4:i>223?3:i>191?2:1;if(n+u<=t){var a,s,h,c;switch(u){case 1:if(i<128){o=i}break;case 2:a=e[n+1];if((a&192)===128){c=(i&31)<<6|a&63;if(c>127){o=c}}break;case 3:a=e[n+1];s=e[n+2];if((a&192)===128&&(s&192)===128){c=(i&15)<<12|(a&63)<<6|s&63;if(c>2047&&(c<55296||c>57343)){o=c}}break;case 4:a=e[n+1];s=e[n+2];h=e[n+3];if((a&192)===128&&(s&192)===128&&(h&192)===128){c=(i&15)<<18|(a&63)<<12|(s&63)<<6|h&63;if(c>65535&&c<1114112){o=c}}}}if(o===null){o=65533;u=1}else if(o>65535){o-=65536;f.push(o>>>10&1023|55296);o=56320|o&1023}f.push(o);n+=u}return decodeCodePointsArray(f)}var u=4096;function decodeCodePointsArray(e){var r=e.length;if(r<=u){return String.fromCharCode.apply(String,e)}var t=\"\";var f=0;while(f<r){t+=String.fromCharCode.apply(String,e.slice(f,f+=u))}return t}function asciiSlice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n]&127)}return f}function latin1Slice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n])}return f}function hexSlice(e,r,t){var f=e.length;if(!r||r<0)r=0;if(!t||t<0||t>f)t=f;var n=\"\";for(var i=r;i<t;++i){n+=s[e[i]]}return n}function utf16leSlice(e,r,t){var f=e.slice(r,t);var n=\"\";for(var i=0;i<f.length;i+=2){n+=String.fromCharCode(f[i]+f[i+1]*256)}return n}Buffer.prototype.slice=function slice(e,r){var t=this.length;e=~~e;r=r===undefined?t:~~r;if(e<0){e+=t;if(e<0)e=0}else if(e>t){e=t}if(r<0){r+=t;if(r<0)r=0}else if(r>t){r=t}if(r<e)r=e;var f=this.subarray(e,r);Object.setPrototypeOf(f,Buffer.prototype);return f};function checkOffset(e,r,t){if(e%1!==0||e<0)throw new RangeError(\"offset is not uint\");if(e+r>t)throw new RangeError(\"Trying to access beyond buffer length\")}Buffer.prototype.readUIntLE=function readUIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}return f};Buffer.prototype.readUIntBE=function readUIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t){checkOffset(e,r,this.length)}var f=this[e+--r];var n=1;while(r>0&&(n*=256)){f+=this[e+--r]*n}return f};Buffer.prototype.readUInt8=function readUInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);return this[e]};Buffer.prototype.readUInt16LE=function readUInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]|this[e+1]<<8};Buffer.prototype.readUInt16BE=function readUInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]<<8|this[e+1]};Buffer.prototype.readUInt32LE=function readUInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return(this[e]|this[e+1]<<8|this[e+2]<<16)+this[e+3]*16777216};Buffer.prototype.readUInt32BE=function readUInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]*16777216+(this[e+1]<<16|this[e+2]<<8|this[e+3])};Buffer.prototype.readIntLE=function readIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}n*=128;if(f>=n)f-=Math.pow(2,8*r);return f};Buffer.prototype.readIntBE=function readIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=r;var n=1;var i=this[e+--f];while(f>0&&(n*=256)){i+=this[e+--f]*n}n*=128;if(i>=n)i-=Math.pow(2,8*r);return i};Buffer.prototype.readInt8=function readInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);if(!(this[e]&128))return this[e];return(255-this[e]+1)*-1};Buffer.prototype.readInt16LE=function readInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e]|this[e+1]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt16BE=function readInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e+1]|this[e]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt32LE=function readInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24};Buffer.prototype.readInt32BE=function readInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]};Buffer.prototype.readFloatLE=function readFloatLE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,true,23,4)};Buffer.prototype.readFloatBE=function readFloatBE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,false,23,4)};Buffer.prototype.readDoubleLE=function readDoubleLE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,true,52,8)};Buffer.prototype.readDoubleBE=function readDoubleBE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,false,52,8)};function checkInt(e,r,t,f,n,i){if(!Buffer.isBuffer(e))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(r>n||r<i)throw new RangeError('\"value\" argument is out of bounds');if(t+f>e.length)throw new RangeError(\"Index out of range\")}Buffer.prototype.writeUIntLE=function writeUIntLE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=1;var o=0;this[r]=e&255;while(++o<t&&(i*=256)){this[r+o]=e/i&255}return r+t};Buffer.prototype.writeUIntBE=function writeUIntBE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=t-1;var o=1;this[r+i]=e&255;while(--i>=0&&(o*=256)){this[r+i]=e/o&255}return r+t};Buffer.prototype.writeUInt8=function writeUInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,255,0);this[r]=e&255;return r+1};Buffer.prototype.writeUInt16LE=function writeUInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeUInt16BE=function writeUInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeUInt32LE=function writeUInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r+3]=e>>>24;this[r+2]=e>>>16;this[r+1]=e>>>8;this[r]=e&255;return r+4};Buffer.prototype.writeUInt32BE=function writeUInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};Buffer.prototype.writeIntLE=function writeIntLE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=0;var o=1;var u=0;this[r]=e&255;while(++i<t&&(o*=256)){if(e<0&&u===0&&this[r+i-1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeIntBE=function writeIntBE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=t-1;var o=1;var u=0;this[r+i]=e&255;while(--i>=0&&(o*=256)){if(e<0&&u===0&&this[r+i+1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeInt8=function writeInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,127,-128);if(e<0)e=255+e+1;this[r]=e&255;return r+1};Buffer.prototype.writeInt16LE=function writeInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeInt16BE=function writeInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeInt32LE=function writeInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);this[r]=e&255;this[r+1]=e>>>8;this[r+2]=e>>>16;this[r+3]=e>>>24;return r+4};Buffer.prototype.writeInt32BE=function writeInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);if(e<0)e=4294967295+e+1;this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};function checkIEEE754(e,r,t,f,n,i){if(t+f>e.length)throw new RangeError(\"Index out of range\");if(t<0)throw new RangeError(\"Index out of range\")}function writeFloat(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,4,34028234663852886e22,-34028234663852886e22)}n.write(e,r,t,f,23,4);return t+4}Buffer.prototype.writeFloatLE=function writeFloatLE(e,r,t){return writeFloat(this,e,r,true,t)};Buffer.prototype.writeFloatBE=function writeFloatBE(e,r,t){return writeFloat(this,e,r,false,t)};function writeDouble(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,8,17976931348623157e292,-17976931348623157e292)}n.write(e,r,t,f,52,8);return t+8}Buffer.prototype.writeDoubleLE=function writeDoubleLE(e,r,t){return writeDouble(this,e,r,true,t)};Buffer.prototype.writeDoubleBE=function writeDoubleBE(e,r,t){return writeDouble(this,e,r,false,t)};Buffer.prototype.copy=function copy(e,r,t,f){if(!Buffer.isBuffer(e))throw new TypeError(\"argument should be a Buffer\");if(!t)t=0;if(!f&&f!==0)f=this.length;if(r>=e.length)r=e.length;if(!r)r=0;if(f>0&&f<t)f=t;if(f===t)return 0;if(e.length===0||this.length===0)return 0;if(r<0){throw new RangeError(\"targetStart out of bounds\")}if(t<0||t>=this.length)throw new RangeError(\"Index out of range\");if(f<0)throw new RangeError(\"sourceEnd out of bounds\");if(f>this.length)f=this.length;if(e.length-r<f-t){f=e.length-r+t}var n=f-t;if(this===e&&typeof Uint8Array.prototype.copyWithin===\"function\"){this.copyWithin(r,t,f)}else if(this===e&&t<r&&r<f){for(var i=n-1;i>=0;--i){e[i+r]=this[i+t]}}else{Uint8Array.prototype.set.call(e,this.subarray(t,f),r)}return n};Buffer.prototype.fill=function fill(e,r,t,f){if(typeof e===\"string\"){if(typeof r===\"string\"){f=r;r=0;t=this.length}else if(typeof t===\"string\"){f=t;t=this.length}if(f!==undefined&&typeof f!==\"string\"){throw new TypeError(\"encoding must be a string\")}if(typeof f===\"string\"&&!Buffer.isEncoding(f)){throw new TypeError(\"Unknown encoding: \"+f)}if(e.length===1){var n=e.charCodeAt(0);if(f===\"utf8\"&&n<128||f===\"latin1\"){e=n}}}else if(typeof e===\"number\"){e=e&255}else if(typeof e===\"boolean\"){e=Number(e)}if(r<0||this.length<r||this.length<t){throw new RangeError(\"Out of range index\")}if(t<=r){return this}r=r>>>0;t=t===undefined?this.length:t>>>0;if(!e)e=0;var i;if(typeof e===\"number\"){for(i=r;i<t;++i){this[i]=e}}else{var o=Buffer.isBuffer(e)?e:Buffer.from(e,f);var u=o.length;if(u===0){throw new TypeError('The value \"'+e+'\" is invalid for argument \"value\"')}for(i=0;i<t-r;++i){this[i+r]=o[i%u]}}return this};var a=/[^+/0-9A-Za-z-_]/g;function base64clean(e){e=e.split(\"=\")[0];e=e.trim().replace(a,\"\");if(e.length<2)return\"\";while(e.length%4!==0){e=e+\"=\"}return e}function utf8ToBytes(e,r){r=r||Infinity;var t;var f=e.length;var n=null;var i=[];for(var o=0;o<f;++o){t=e.charCodeAt(o);if(t>55295&&t<57344){if(!n){if(t>56319){if((r-=3)>-1)i.push(239,191,189);continue}else if(o+1===f){if((r-=3)>-1)i.push(239,191,189);continue}n=t;continue}if(t<56320){if((r-=3)>-1)i.push(239,191,189);n=t;continue}t=(n-55296<<10|t-56320)+65536}else if(n){if((r-=3)>-1)i.push(239,191,189)}n=null;if(t<128){if((r-=1)<0)break;i.push(t)}else if(t<2048){if((r-=2)<0)break;i.push(t>>6|192,t&63|128)}else if(t<65536){if((r-=3)<0)break;i.push(t>>12|224,t>>6&63|128,t&63|128)}else if(t<1114112){if((r-=4)<0)break;i.push(t>>18|240,t>>12&63|128,t>>6&63|128,t&63|128)}else{throw new Error(\"Invalid code point\")}}return i}function asciiToBytes(e){var r=[];for(var t=0;t<e.length;++t){r.push(e.charCodeAt(t)&255)}return r}function utf16leToBytes(e,r){var t,f,n;var i=[];for(var o=0;o<e.length;++o){if((r-=2)<0)break;t=e.charCodeAt(o);f=t>>8;n=t%256;i.push(n);i.push(f)}return i}function base64ToBytes(e){return f.toByteArray(base64clean(e))}function blitBuffer(e,r,t,f){for(var n=0;n<f;++n){if(n+t>=r.length||n>=e.length)break;r[n+t]=e[n]}return n}function isInstance(e,r){return e instanceof r||e!=null&&e.constructor!=null&&e.constructor.name!=null&&e.constructor.name===r.name}function numberIsNaN(e){return e!==e}var s=function(){var e=\"0123456789abcdef\";var r=new Array(256);for(var t=0;t<16;++t){var f=t*16;for(var n=0;n<16;++n){r[f+n]=e[t]+e[n]}}return r}()},783:function(e,r){\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nr.read=function(e,r,t,f,n){var i,o;var u=n*8-f-1;var a=(1<<u)-1;var s=a>>1;var h=-7;var c=t?n-1:0;var l=t?-1:1;var p=e[r+c];c+=l;i=p&(1<<-h)-1;p>>=-h;h+=u;for(;h>0;i=i*256+e[r+c],c+=l,h-=8){}o=i&(1<<-h)-1;i>>=-h;h+=f;for(;h>0;o=o*256+e[r+c],c+=l,h-=8){}if(i===0){i=1-s}else if(i===a){return o?NaN:(p?-1:1)*Infinity}else{o=o+Math.pow(2,f);i=i-s}return(p?-1:1)*o*Math.pow(2,i-f)};r.write=function(e,r,t,f,n,i){var o,u,a;var s=i*8-n-1;var h=(1<<s)-1;var c=h>>1;var l=n===23?Math.pow(2,-24)-Math.pow(2,-77):0;var p=f?0:i-1;var y=f?1:-1;var g=r<0||r===0&&1/r<0?1:0;r=Math.abs(r);if(isNaN(r)||r===Infinity){u=isNaN(r)?1:0;o=h}else{o=Math.floor(Math.log(r)/Math.LN2);if(r*(a=Math.pow(2,-o))<1){o--;a*=2}if(o+c>=1){r+=l/a}else{r+=l*Math.pow(2,1-c)}if(r*a>=2){o++;a/=2}if(o+c>=h){u=0;o=h}else if(o+c>=1){u=(r*a-1)*Math.pow(2,n);o=o+c}else{u=r*Math.pow(2,c-1)*Math.pow(2,n);o=0}}for(;n>=8;e[t+p]=u&255,p+=y,u/=256,n-=8){}o=o<<n|u;s+=n;for(;s>0;e[t+p]=o&255,p+=y,o/=256,s-=8){}e[t+p-y]|=g*128}}};var r={};function __nccwpck_require__(t){var f=r[t];if(f!==undefined){return f.exports}var n=r[t]={exports:{}};var i=true;try{e[t](n,n.exports,__nccwpck_require__);i=false}finally{if(i)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(72);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/dist/compiled/buffer/index.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./src/context/CartContext.tsx":
/*!*************************************!*\
  !*** ./src/context/CartContext.tsx ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CartProvider: () => (/* binding */ CartProvider),\n/* harmony export */   useCart: () => (/* binding */ useCart)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_shopify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/shopify */ \"(pages-dir-browser)/./src/lib/shopify.ts\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst CartContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst useCart = ()=>{\n    _s();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(CartContext);\n    if (!context) {\n        throw new Error('useCart must be used within a CartProvider');\n    }\n    return context;\n};\n_s(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst CartProvider = (param)=>{\n    let { children } = param;\n    _s1();\n    const [cartItems, setCartItems] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Initialize cart from localStorage\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CartProvider.useEffect\": ()=>{\n            const storedCart = localStorage.getItem('nazkatech-cart');\n            if (storedCart) {\n                try {\n                    setCartItems(JSON.parse(storedCart));\n                } catch (e) {\n                    console.error('Failed to parse cart from localStorage:', e);\n                    localStorage.removeItem('nazkatech-cart');\n                }\n            }\n        }\n    }[\"CartProvider.useEffect\"], []);\n    // Update localStorage whenever cart changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CartProvider.useEffect\": ()=>{\n            localStorage.setItem('nazkatech-cart', JSON.stringify(cartItems));\n        }\n    }[\"CartProvider.useEffect\"], [\n        cartItems\n    ]);\n    const toggleCart = ()=>setIsOpen(!isOpen);\n    const closeCart = ()=>setIsOpen(false);\n    const openCart = ()=>setIsOpen(true);\n    const addToCart = (item)=>{\n        setCartItems((prevItems)=>{\n            const existingItemIndex = prevItems.findIndex((existingItem)=>existingItem.variantId === item.variantId);\n            if (existingItemIndex > -1) {\n                // Update quantity if item already exists\n                const newCart = [\n                    ...prevItems\n                ];\n                newCart[existingItemIndex].quantity += item.quantity;\n                return newCart;\n            } else {\n                // Add new item\n                return [\n                    ...prevItems,\n                    item\n                ];\n            }\n        });\n        openCart();\n    };\n    const updateQuantity = (id, quantity)=>{\n        setCartItems((prevItems)=>prevItems.map((item)=>item.id === id ? {\n                    ...item,\n                    quantity\n                } : item));\n    };\n    const removeFromCart = (id)=>{\n        setCartItems((prevItems)=>prevItems.filter((item)=>item.id !== id));\n    };\n    const clearCart = ()=>{\n        setCartItems([]);\n        localStorage.removeItem('nazkatech-cart');\n    };\n    const totalPrice = cartItems.reduce((sum, item)=>sum + parseFloat(item.price) * item.quantity, 0).toFixed(2);\n    const totalItems = cartItems.reduce((sum, item)=>sum + item.quantity, 0);\n    const checkout = async ()=>{\n        try {\n            const checkoutUrl = await (0,_lib_shopify__WEBPACK_IMPORTED_MODULE_2__.createCheckout)(cartItems);\n            if (checkoutUrl) {\n                window.location.href = checkoutUrl;\n            } else {\n                console.error(\"Couldn't create checkout\");\n            }\n        } catch (error) {\n            console.error('Error during checkout:', error);\n        }\n    };\n    const value = {\n        isOpen,\n        toggleCart,\n        closeCart,\n        openCart,\n        cartItems,\n        addToCart,\n        updateQuantity,\n        removeFromCart,\n        clearCart,\n        totalPrice,\n        totalItems,\n        checkout\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(CartContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/home/runner/workspace/src/context/CartContext.tsx\",\n        lineNumber: 120,\n        columnNumber: 5\n    }, undefined);\n};\n_s1(CartProvider, \"jz1BkMmrZoIxsaXpNnxAwH7Quo8=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/context/CartContext.tsx\n"));

/***/ }),

/***/ "(pages-dir-browser)/./src/data/sampleProducts.ts":
/*!************************************!*\
  !*** ./src/data/sampleProducts.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSampleProductByHandle: () => (/* binding */ getSampleProductByHandle),\n/* harmony export */   sampleProducts: () => (/* binding */ sampleProducts)\n/* harmony export */ });\n// Sample products for development purposes only\nconst sampleProducts = [\n    {\n        id: 'sample-product-1',\n        title: 'Biodegradable Phone Case',\n        description: 'Eco-friendly phone case made from biodegradable materials that provide excellent protection while being kind to the environment.',\n        descriptionHtml: '<p>Eco-friendly phone case made from biodegradable materials that provide excellent protection while being kind to the environment.</p><ul><li>Fully biodegradable</li><li>Shock-absorbent</li><li>Available for multiple phone models</li></ul>',\n        handle: 'biodegradable-phone-case',\n        price: '29.99',\n        currencyCode: 'USD',\n        image: '/images/product-1.svg',\n        imageAlt: 'Biodegradable phone case in forest green color',\n        variants: [\n            {\n                id: 'sample-variant-1',\n                title: 'iPhone 14 - Forest Green',\n                price: '29.99',\n                currencyCode: 'USD',\n                availableForSale: true\n            },\n            {\n                id: 'sample-variant-2',\n                title: 'iPhone 14 - Natural Beige',\n                price: '29.99',\n                currencyCode: 'USD',\n                availableForSale: true\n            },\n            {\n                id: 'sample-variant-3',\n                title: 'Samsung Galaxy S23 - Forest Green',\n                price: '29.99',\n                currencyCode: 'USD',\n                availableForSale: true\n            }\n        ]\n    },\n    {\n        id: 'sample-product-2',\n        title: 'Solar Power Bank',\n        description: 'Portable solar power bank with high-capacity battery. Charge your devices using clean solar energy anywhere you go.',\n        descriptionHtml: '<p>Portable solar power bank with high-capacity battery. Charge your devices using clean solar energy anywhere you go.</p><ul><li>10,000 mAh capacity</li><li>Solar charging capability</li><li>2 USB ports</li><li>LED light indicator</li></ul>',\n        handle: 'solar-power-bank',\n        price: '49.99',\n        currencyCode: 'USD',\n        image: '/images/product-2.svg',\n        imageAlt: 'Portable solar power bank with solar panel',\n        variants: [\n            {\n                id: 'sample-variant-4',\n                title: '10,000 mAh - Black',\n                price: '49.99',\n                currencyCode: 'USD',\n                availableForSale: true\n            },\n            {\n                id: 'sample-variant-5',\n                title: '20,000 mAh - Black',\n                price: '69.99',\n                currencyCode: 'USD',\n                availableForSale: true\n            }\n        ]\n    },\n    {\n        id: 'sample-product-3',\n        title: 'Recycled Laptop Sleeve',\n        description: 'Protective laptop sleeve made from recycled plastic bottles. Sleek design with soft interior to keep your laptop safe.',\n        descriptionHtml: '<p>Protective laptop sleeve made from recycled plastic bottles. Sleek design with soft interior to keep your laptop safe.</p><ul><li>Made from recycled materials</li><li>Water-resistant</li><li>Soft interior lining</li><li>Available in multiple sizes</li></ul>',\n        handle: 'recycled-laptop-sleeve',\n        price: '34.99',\n        currencyCode: 'USD',\n        image: '/images/product-3.svg',\n        imageAlt: 'Recycled laptop sleeve in dark green color',\n        variants: [\n            {\n                id: 'sample-variant-6',\n                title: '13-inch - Forest Green',\n                price: '34.99',\n                currencyCode: 'USD',\n                availableForSale: true\n            },\n            {\n                id: 'sample-variant-7',\n                title: '15-inch - Forest Green',\n                price: '39.99',\n                currencyCode: 'USD',\n                availableForSale: true\n            },\n            {\n                id: 'sample-variant-8',\n                title: '16-inch - Forest Green',\n                price: '42.99',\n                currencyCode: 'USD',\n                availableForSale: true\n            }\n        ]\n    },\n    {\n        id: 'sample-product-4',\n        title: 'Bamboo Wireless Charger',\n        description: 'Elegant wireless charger made from sustainable bamboo. Fast charging capabilities with a beautiful natural design.',\n        descriptionHtml: '<p>Elegant wireless charger made from sustainable bamboo. Fast charging capabilities with a beautiful natural design.</p><ul><li>Made from sustainable bamboo</li><li>15W fast charging</li><li>Compatible with Qi-enabled devices</li><li>LED indicator</li></ul>',\n        handle: 'bamboo-wireless-charger',\n        price: '39.99',\n        currencyCode: 'USD',\n        image: '/images/product-4.svg',\n        imageAlt: 'Bamboo wireless charging pad',\n        variants: [\n            {\n                id: 'sample-variant-9',\n                title: 'Standard - Natural Bamboo',\n                price: '39.99',\n                currencyCode: 'USD',\n                availableForSale: true\n            },\n            {\n                id: 'sample-variant-10',\n                title: 'Dual Charger - Natural Bamboo',\n                price: '59.99',\n                currencyCode: 'USD',\n                availableForSale: true\n            }\n        ]\n    },\n    {\n        id: 'sample-product-5',\n        title: 'Eco-Friendly Cable Organizer',\n        description: 'Keep your cables tidy with this eco-friendly cable organizer made from recycled materials. Reduces clutter while being sustainable.',\n        descriptionHtml: '<p>Keep your cables tidy with this eco-friendly cable organizer made from recycled materials. Reduces clutter while being sustainable.</p><ul><li>Made from recycled plastics</li><li>5 cable slots</li><li>Non-slip base</li><li>Compact design</li></ul>',\n        handle: 'eco-friendly-cable-organizer',\n        price: '19.99',\n        currencyCode: 'USD',\n        image: '/images/product-5.svg',\n        imageAlt: 'Cable organizer with multiple charging cables neatly arranged',\n        variants: [\n            {\n                id: 'sample-variant-11',\n                title: 'Small - Gray',\n                price: '19.99',\n                currencyCode: 'USD',\n                availableForSale: true\n            },\n            {\n                id: 'sample-variant-12',\n                title: 'Large - Gray',\n                price: '24.99',\n                currencyCode: 'USD',\n                availableForSale: true\n            }\n        ]\n    },\n    {\n        id: 'sample-product-6',\n        title: 'Recycled Aluminum Laptop Stand',\n        description: 'Ergonomic laptop stand made from recycled aluminum. Improves posture and laptop cooling while being environmentally conscious.',\n        descriptionHtml: '<p>Ergonomic laptop stand made from recycled aluminum. Improves posture and laptop cooling while being environmentally conscious.</p><ul><li>Made from recycled aluminum</li><li>Adjustable height</li><li>Improves airflow</li><li>Foldable for portability</li></ul>',\n        handle: 'recycled-aluminum-laptop-stand',\n        price: '45.99',\n        currencyCode: 'USD',\n        image: '/images/product-6.svg',\n        imageAlt: 'Adjustable aluminum laptop stand holding a laptop',\n        variants: [\n            {\n                id: 'sample-variant-13',\n                title: 'Silver',\n                price: '45.99',\n                currencyCode: 'USD',\n                availableForSale: true\n            },\n            {\n                id: 'sample-variant-14',\n                title: 'Space Gray',\n                price: '45.99',\n                currencyCode: 'USD',\n                availableForSale: true\n            }\n        ]\n    }\n];\n// Export single product finder function\nfunction getSampleProductByHandle(handle) {\n    return sampleProducts.find((product)=>product.handle === handle) || null;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/data/sampleProducts.ts\n"));

/***/ }),

/***/ "(pages-dir-browser)/./src/lib/shopify.ts":
/*!****************************!*\
  !*** ./src/lib/shopify.ts ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCheckout: () => (/* binding */ createCheckout),\n/* harmony export */   getAllProducts: () => (/* binding */ getAllProducts),\n/* harmony export */   getProductByHandle: () => (/* binding */ getProductByHandle),\n/* harmony export */   getProductByHandleFromAdminAPI: () => (/* binding */ getProductByHandleFromAdminAPI),\n/* harmony export */   getProductsFromAdminAPI: () => (/* binding */ getProductsFromAdminAPI)\n/* harmony export */ });\n/* harmony import */ var _data_sampleProducts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/data/sampleProducts */ \"(pages-dir-browser)/./src/data/sampleProducts.ts\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(pages-dir-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(pages-dir-browser)/./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n\n// Toggle to use sample products for development (no Shopify API connection)\nconst DEVELOPMENT_MODE = true;\n// Trim any spaces from the domain to prevent URL parsing errors\nconst domain = (\"test-lxm-store.myshopify.com \" || 0).trim();\nconst storefrontAccessToken = \"79e744f81d628b84657cb9c5b0aa4196-1744091055\" || 0;\nconst apiKey = process.env.SHOPIFY_API_KEY || '';\nconst apiSecret = process.env.SHOPIFY_API_SECRET || '';\nconst storePassword = process.env.SHOPIFY_STORE_PASSWORD || '';\n// For debugging\nconsole.log('Environment check:');\nconsole.log('Development mode:', DEVELOPMENT_MODE ? 'Yes (using sample products)' : 'No (using Shopify API)');\nconsole.log('Domain configured:', domain || 'Not set');\nconsole.log('Access token available:', storefrontAccessToken ? 'Yes' : 'No');\nconsole.log('API Key available:', apiKey ? 'Yes' : 'No');\nconsole.log('API Secret available:', apiSecret ? 'Yes' : 'No');\nconsole.log('Store password available:', storePassword ? 'Yes' : 'No');\n// Admin REST API fetch function\nconst shopifyAdminFetch = async (endpoint)=>{\n    try {\n        // Don't include credentials in URL (will cause security errors)\n        const apiUrl = \"https://\".concat(domain, \"/admin/api/2023-07/\").concat(endpoint);\n        console.log('Shopify Admin API Request URL:', apiUrl);\n        // Use Authorization header for Basic Auth credentials\n        const basicAuth = Buffer.from(\"\".concat(apiKey, \":\").concat(storePassword)).toString('base64');\n        const result = await fetch(apiUrl, {\n            method: 'GET',\n            headers: {\n                'Authorization': \"Basic \".concat(basicAuth),\n                'Content-Type': 'application/json'\n            }\n        });\n        const responseBody = await result.json();\n        // Log the response for debugging\n        console.log('Shopify Admin API Response Status:', result.status);\n        if (result.status !== 200) {\n            console.log('Shopify Admin API Response Error:', responseBody);\n        } else {\n            console.log('Shopify Admin API Success! Response contains data.');\n        }\n        return {\n            status: result.status,\n            body: responseBody\n        };\n    } catch (error) {\n        console.error('Error fetching data from Shopify Admin API:', error);\n        return {\n            status: 500,\n            body: {\n                errors: [\n                    {\n                        message: 'Error fetching data from Shopify Admin API'\n                    }\n                ]\n            }\n        };\n    }\n};\n// API fetch function with multiple auth options (Storefront API)\nconst shopifyFetch = async (param)=>{\n    let { query, variables } = param;\n    try {\n        // Set up the API URL for the Storefront API (using 2023-07 version as it's known to be stable)\n        const apiUrl = \"https://\".concat(domain, \"/api/2023-07/graphql.json\");\n        // We'll use both authentication methods in the headers to see which one works\n        const headers = {\n            'Content-Type': 'application/json',\n            'X-Shopify-Storefront-Access-Token': storefrontAccessToken\n        };\n        // Add basic auth if available\n        if (apiKey && apiSecret) {\n            const basicAuth = Buffer.from(\"\".concat(apiKey, \":\").concat(apiSecret)).toString('base64');\n            headers['Authorization'] = \"Basic \".concat(basicAuth);\n        }\n        // Log the request information for debugging (safely)\n        console.log('Shopify API Request URL:', apiUrl);\n        const result = await fetch(apiUrl, {\n            method: 'POST',\n            headers,\n            body: JSON.stringify({\n                query,\n                variables\n            })\n        });\n        const responseBody = await result.json();\n        // Log the response for debugging\n        console.log('Shopify API Response Status:', result.status);\n        if (result.status !== 200) {\n            console.log('Shopify API Response Errors:', responseBody.errors);\n        }\n        return {\n            status: result.status,\n            body: responseBody\n        };\n    } catch (error) {\n        console.error('Error fetching data from Shopify:', error);\n        return {\n            status: 500,\n            body: {\n                errors: [\n                    {\n                        message: 'Error fetching data from Shopify'\n                    }\n                ]\n            }\n        };\n    }\n};\n// Attempt to fetch products from Admin API as a fallback\nasync function getProductsFromAdminAPI() {\n    try {\n        console.log('Attempting to fetch products using Admin API...');\n        const response = await shopifyAdminFetch('products.json?limit=50');\n        if (response.status !== 200 || !response.body.products) {\n            console.error('Error fetching products from Admin API:', response.body);\n            return [];\n        }\n        console.log(\"Successfully fetched \".concat(response.body.products.length, \" products from Admin API\"));\n        const products = response.body.products.map((product)=>{\n            // Parse the first variant for price info\n            const firstVariant = product.variants && product.variants.length > 0 ? product.variants[0] : {\n                price: '0.00'\n            };\n            // Parse image\n            const image = product.images && product.images.length > 0 ? product.images[0] : null;\n            // Map to our Product type\n            return {\n                id: product.id.toString(),\n                title: product.title,\n                description: product.body_html || '',\n                handle: product.handle,\n                descriptionHtml: product.body_html || '',\n                price: firstVariant.price,\n                currencyCode: 'USD',\n                image: image ? image.src : '',\n                imageAlt: image ? image.alt || product.title : product.title,\n                variants: product.variants.map((variant)=>({\n                        id: variant.id.toString(),\n                        title: variant.title,\n                        price: variant.price,\n                        currencyCode: 'USD',\n                        availableForSale: variant.available\n                    }))\n            };\n        });\n        return products;\n    } catch (error) {\n        console.error('Error in getProductsFromAdminAPI:', error);\n        return [];\n    }\n}\nasync function getAllProducts() {\n    // If in development mode, return sample products instead\n    if (DEVELOPMENT_MODE) {\n        console.log('Using sample products for development');\n        // Simulate API delay for more realistic development\n        await new Promise((resolve)=>setTimeout(resolve, 500));\n        return _data_sampleProducts__WEBPACK_IMPORTED_MODULE_0__.sampleProducts;\n    }\n    // If not in development mode, try using the Storefront API\n    const query = \"\\n    query GetAllProducts {\\n      products(first: 100) {\\n        edges {\\n          node {\\n            id\\n            title\\n            description\\n            handle\\n            priceRange {\\n              minVariantPrice {\\n                amount\\n                currencyCode\\n              }\\n            }\\n            images(first: 1) {\\n              edges {\\n                node {\\n                  url\\n                  altText\\n                }\\n              }\\n            }\\n            variants(first: 100) {\\n              edges {\\n                node {\\n                  id\\n                  title\\n                  price {\\n                    amount\\n                    currencyCode\\n                  }\\n                  availableForSale\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \";\n    const response = await shopifyFetch({\n        query\n    });\n    if (response.status === 200 && response.body.data && response.body.data.products) {\n        console.log('Successfully fetched products using Storefront API');\n        const products = response.body.data.products.edges.map((param)=>{\n            let { node } = param;\n            var _node_images_edges_, _node_images_edges_1;\n            const product = {\n                id: node.id,\n                title: node.title,\n                description: node.description,\n                handle: node.handle,\n                price: node.priceRange.minVariantPrice.amount,\n                currencyCode: node.priceRange.minVariantPrice.currencyCode,\n                image: ((_node_images_edges_ = node.images.edges[0]) === null || _node_images_edges_ === void 0 ? void 0 : _node_images_edges_.node.url) || '',\n                imageAlt: ((_node_images_edges_1 = node.images.edges[0]) === null || _node_images_edges_1 === void 0 ? void 0 : _node_images_edges_1.node.altText) || node.title,\n                variants: node.variants.edges.map((param)=>{\n                    let { node: variant } = param;\n                    return {\n                        id: variant.id,\n                        title: variant.title,\n                        price: variant.price.amount,\n                        currencyCode: variant.price.currencyCode,\n                        availableForSale: variant.availableForSale\n                    };\n                })\n            };\n            return product;\n        });\n        return products;\n    }\n    // If Storefront API fails, try the Admin API\n    console.log('Storefront API failed, falling back to Admin API...');\n    console.error('Storefront API error:', response.body.errors);\n    return getProductsFromAdminAPI();\n}\n// Get a single product by handle from Admin API\nasync function getProductByHandleFromAdminAPI(handle) {\n    try {\n        console.log('Attempting to fetch product with handle \"'.concat(handle, '\" using Admin API...'));\n        // First we need to get all products as Admin API doesn't support direct handle lookup\n        const productsResponse = await shopifyAdminFetch('products.json?handle=' + handle);\n        if (productsResponse.status !== 200 || !productsResponse.body.products || productsResponse.body.products.length === 0) {\n            console.error('Error fetching product by handle from Admin API:', productsResponse.body);\n            return null;\n        }\n        const product = productsResponse.body.products[0]; // Should be just one\n        console.log('Successfully fetched product \"'.concat(product.title, '\" from Admin API'));\n        // Parse the first variant for price info\n        const firstVariant = product.variants && product.variants.length > 0 ? product.variants[0] : {\n            price: '0.00'\n        };\n        // Parse images\n        const images = product.images && product.images.length > 0 ? product.images.map((img)=>({\n                url: img.src,\n                altText: img.alt || product.title,\n                width: img.width,\n                height: img.height\n            })) : [];\n        // Map to our Product type\n        return {\n            id: product.id.toString(),\n            title: product.title,\n            description: product.body_html || '',\n            handle: product.handle,\n            descriptionHtml: product.body_html || '',\n            price: firstVariant.price,\n            currencyCode: 'USD',\n            images,\n            image: images.length > 0 ? images[0].url : '',\n            imageAlt: images.length > 0 ? images[0].altText : product.title,\n            variants: product.variants.map((variant)=>({\n                    id: variant.id.toString(),\n                    title: variant.title,\n                    price: variant.price,\n                    currencyCode: 'USD',\n                    availableForSale: variant.available\n                }))\n        };\n    } catch (error) {\n        console.error('Error in getProductByHandleFromAdminAPI:', error);\n        return null;\n    }\n}\nasync function getProductByHandle(handle) {\n    // If in development mode, return sample product instead\n    if (DEVELOPMENT_MODE) {\n        console.log('Using sample product with handle \"'.concat(handle, '\" for development'));\n        // Simulate API delay for more realistic development\n        await new Promise((resolve)=>setTimeout(resolve, 500));\n        return (0,_data_sampleProducts__WEBPACK_IMPORTED_MODULE_0__.getSampleProductByHandle)(handle);\n    }\n    // If not in development mode, try using the Storefront API\n    const query = \"\\n    query GetProductByHandle($handle: String!) {\\n      productByHandle(handle: $handle) {\\n        id\\n        title\\n        description\\n        handle\\n        descriptionHtml\\n        priceRange {\\n          minVariantPrice {\\n            amount\\n            currencyCode\\n          }\\n        }\\n        images(first: 10) {\\n          edges {\\n            node {\\n              url\\n              altText\\n              width\\n              height\\n            }\\n          }\\n        }\\n        variants(first: 100) {\\n          edges {\\n            node {\\n              id\\n              title\\n              price {\\n                amount\\n                currencyCode\\n              }\\n              availableForSale\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \";\n    const variables = {\n        handle\n    };\n    const response = await shopifyFetch({\n        query,\n        variables\n    });\n    if (response.status === 200 && response.body.data && response.body.data.productByHandle) {\n        var _product_images_edges_, _product_images_edges_1;\n        console.log('Successfully fetched product using Storefront API');\n        const product = response.body.data.productByHandle;\n        return {\n            id: product.id,\n            title: product.title,\n            description: product.description,\n            handle: product.handle,\n            descriptionHtml: product.descriptionHtml,\n            price: product.priceRange.minVariantPrice.amount,\n            currencyCode: product.priceRange.minVariantPrice.currencyCode,\n            images: product.images.edges.map((param)=>{\n                let { node } = param;\n                return {\n                    url: node.url,\n                    altText: node.altText || product.title,\n                    width: node.width,\n                    height: node.height\n                };\n            }),\n            image: ((_product_images_edges_ = product.images.edges[0]) === null || _product_images_edges_ === void 0 ? void 0 : _product_images_edges_.node.url) || '',\n            imageAlt: ((_product_images_edges_1 = product.images.edges[0]) === null || _product_images_edges_1 === void 0 ? void 0 : _product_images_edges_1.node.altText) || product.title,\n            variants: product.variants.edges.map((param)=>{\n                let { node: variant } = param;\n                return {\n                    id: variant.id,\n                    title: variant.title,\n                    price: variant.price.amount,\n                    currencyCode: variant.price.currencyCode,\n                    availableForSale: variant.availableForSale\n                };\n            })\n        };\n    }\n    // If Storefront API fails, try the Admin API\n    console.log('Storefront API failed to fetch product, falling back to Admin API...');\n    console.error('Storefront API error:', response.body.errors);\n    return getProductByHandleFromAdminAPI(handle);\n}\nasync function createCheckout(cartItems) {\n    var _response_body_data_checkoutCreate_checkoutUserErrors, _response_body_data_checkoutCreate, _response_body_data;\n    // If in development mode, return fake checkout URL\n    if (DEVELOPMENT_MODE) {\n        console.log('Using sample checkout for development');\n        console.log('Cart items:', cartItems);\n        // Simulate API delay\n        await new Promise((resolve)=>setTimeout(resolve, 800));\n        // Return a fake checkout URL for development\n        return 'https://checkout.shopify.com/development-mode/sample-checkout';\n    }\n    // For production mode, use the real Shopify API\n    const lineItems = cartItems.map((item)=>({\n            variantId: item.variantId,\n            quantity: item.quantity\n        }));\n    const query = \"\\n    mutation CheckoutCreate($input: CheckoutCreateInput!) {\\n      checkoutCreate(input: $input) {\\n        checkout {\\n          id\\n          webUrl\\n        }\\n        checkoutUserErrors {\\n          code\\n          field\\n          message\\n        }\\n      }\\n    }\\n  \";\n    const variables = {\n        input: {\n            lineItems\n        }\n    };\n    const response = await shopifyFetch({\n        query,\n        variables\n    });\n    if (response.status !== 200 || ((_response_body_data = response.body.data) === null || _response_body_data === void 0 ? void 0 : (_response_body_data_checkoutCreate = _response_body_data.checkoutCreate) === null || _response_body_data_checkoutCreate === void 0 ? void 0 : (_response_body_data_checkoutCreate_checkoutUserErrors = _response_body_data_checkoutCreate.checkoutUserErrors) === null || _response_body_data_checkoutCreate_checkoutUserErrors === void 0 ? void 0 : _response_body_data_checkoutCreate_checkoutUserErrors.length) > 0) {\n        var _response_body_data_checkoutCreate1, _response_body_data1;\n        console.error('Error creating checkout:', response.body.errors || ((_response_body_data1 = response.body.data) === null || _response_body_data1 === void 0 ? void 0 : (_response_body_data_checkoutCreate1 = _response_body_data1.checkoutCreate) === null || _response_body_data_checkoutCreate1 === void 0 ? void 0 : _response_body_data_checkoutCreate1.checkoutUserErrors));\n        return null;\n    }\n    return response.body.data.checkoutCreate.checkout.webUrl;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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TUFBTXBELFFBQVM7SUFnQmYsTUFBTUMsWUFBWTtRQUNoQm9ELE9BQU87WUFDTEo7UUFDRjtJQUNGO0lBRUEsTUFBTTVDLFdBQVcsTUFBTU4sYUFBYTtRQUFFQztRQUFPQztJQUFVO0lBRXZELElBQUlJLFNBQVNYLE1BQU0sS0FBSyxPQUFPVyxFQUFBQSxzQkFBQUEsU0FBU1YsSUFBSSxDQUFDcUMsSUFBSSxjQUFsQjNCLDJDQUFBQSxxQ0FBQUEsb0JBQW9CaUQsY0FBYyxjQUFsQ2pELDBEQUFBQSx3REFBQUEsbUNBQW9Da0Qsa0JBQWtCLGNBQXREbEQsNEVBQUFBLHNEQUF3REUsTUFBTSxJQUFHLEdBQUc7WUFDL0JGLHFDQUFBQTtRQUFsRTFCLFFBQVFpQixLQUFLLENBQUMsNEJBQTRCUyxTQUFTVixJQUFJLENBQUNFLE1BQU0sTUFBSVEsdUJBQUFBLFNBQVNWLElBQUksQ0FBQ3FDLElBQUksY0FBbEIzQiw0Q0FBQUEsc0NBQUFBLHFCQUFvQmlELGNBQWMsY0FBbENqRCwwREFBQUEsb0NBQW9Da0Qsa0JBQWtCO1FBQ3hILE9BQU87SUFDVDtJQUVBLE9BQU9sRCxTQUFTVixJQUFJLENBQUNxQyxJQUFJLENBQUNzQixjQUFjLENBQUNFLFFBQVEsQ0FBQ0MsTUFBTTtBQUMxRCIsInNvdXJjZXMiOlsiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9zcmMvbGliL3Nob3BpZnkudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvZHVjdCwgUHJvZHVjdFZhcmlhbnQsIENvbGxlY3Rpb24sIENhcnRJdGVtIH0gZnJvbSAnQC90eXBlcyc7XG5pbXBvcnQgeyBzYW1wbGVQcm9kdWN0cywgZ2V0U2FtcGxlUHJvZHVjdEJ5SGFuZGxlIH0gZnJvbSAnQC9kYXRhL3NhbXBsZVByb2R1Y3RzJztcblxuLy8gVG9nZ2xlIHRvIHVzZSBzYW1wbGUgcHJvZHVjdHMgZm9yIGRldmVsb3BtZW50IChubyBTaG9waWZ5IEFQSSBjb25uZWN0aW9uKVxuY29uc3QgREVWRUxPUE1FTlRfTU9ERSA9IHRydWU7XG5cbi8vIFRyaW0gYW55IHNwYWNlcyBmcm9tIHRoZSBkb21haW4gdG8gcHJldmVudCBVUkwgcGFyc2luZyBlcnJvcnNcbmNvbnN0IGRvbWFpbiA9IChwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TSE9QSUZZX1NUT1JFX0RPTUFJTiB8fCAnJykudHJpbSgpO1xuY29uc3Qgc3RvcmVmcm9udEFjY2Vzc1Rva2VuID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU0hPUElGWV9TVE9SRUZST05UX0FDQ0VTU19UT0tFTiB8fCAnJztcbmNvbnN0IGFwaUtleSA9IHByb2Nlc3MuZW52LlNIT1BJRllfQVBJX0tFWSB8fCAnJztcbmNvbnN0IGFwaVNlY3JldCA9IHByb2Nlc3MuZW52LlNIT1BJRllfQVBJX1NFQ1JFVCB8fCAnJztcbmNvbnN0IHN0b3JlUGFzc3dvcmQgPSBwcm9jZXNzLmVudi5TSE9QSUZZX1NUT1JFX1BBU1NXT1JEIHx8ICcnO1xuXG4vLyBGb3IgZGVidWdnaW5nXG5jb25zb2xlLmxvZygnRW52aXJvbm1lbnQgY2hlY2s6Jyk7XG5jb25zb2xlLmxvZygnRGV2ZWxvcG1lbnQgbW9kZTonLCBERVZFTE9QTUVOVF9NT0RFID8gJ1llcyAodXNpbmcgc2FtcGxlIHByb2R1Y3RzKScgOiAnTm8gKHVzaW5nIFNob3BpZnkgQVBJKScpO1xuY29uc29sZS5sb2coJ0RvbWFpbiBjb25maWd1cmVkOicsIGRvbWFpbiB8fCAnTm90IHNldCcpO1xuY29uc29sZS5sb2coJ0FjY2VzcyB0b2tlbiBhdmFpbGFibGU6Jywgc3RvcmVmcm9udEFjY2Vzc1Rva2VuID8gJ1llcycgOiAnTm8nKTtcbmNvbnNvbGUubG9nKCdBUEkgS2V5IGF2YWlsYWJsZTonLCBhcGlLZXkgPyAnWWVzJyA6ICdObycpO1xuY29uc29sZS5sb2coJ0FQSSBTZWNyZXQgYXZhaWxhYmxlOicsIGFwaVNlY3JldCA/ICdZZXMnIDogJ05vJyk7XG5jb25zb2xlLmxvZygnU3RvcmUgcGFzc3dvcmQgYXZhaWxhYmxlOicsIHN0b3JlUGFzc3dvcmQgPyAnWWVzJyA6ICdObycpO1xuXG4vLyBBZG1pbiBSRVNUIEFQSSBmZXRjaCBmdW5jdGlvblxuY29uc3Qgc2hvcGlmeUFkbWluRmV0Y2ggPSBhc3luYyAoZW5kcG9pbnQ6IHN0cmluZykgPT4ge1xuICB0cnkge1xuICAgIC8vIERvbid0IGluY2x1ZGUgY3JlZGVudGlhbHMgaW4gVVJMICh3aWxsIGNhdXNlIHNlY3VyaXR5IGVycm9ycylcbiAgICBjb25zdCBhcGlVcmwgPSBgaHR0cHM6Ly8ke2RvbWFpbn0vYWRtaW4vYXBpLzIwMjMtMDcvJHtlbmRwb2ludH1gO1xuICAgIFxuICAgIGNvbnNvbGUubG9nKCdTaG9waWZ5IEFkbWluIEFQSSBSZXF1ZXN0IFVSTDonLCBhcGlVcmwpO1xuICAgIFxuICAgIC8vIFVzZSBBdXRob3JpemF0aW9uIGhlYWRlciBmb3IgQmFzaWMgQXV0aCBjcmVkZW50aWFsc1xuICAgIGNvbnN0IGJhc2ljQXV0aCA9IEJ1ZmZlci5mcm9tKGAke2FwaUtleX06JHtzdG9yZVBhc3N3b3JkfWApLnRvU3RyaW5nKCdiYXNlNjQnKTtcbiAgICBcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBmZXRjaChhcGlVcmwsIHtcbiAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdBdXRob3JpemF0aW9uJzogYEJhc2ljICR7YmFzaWNBdXRofWAsXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgIH1cbiAgICB9KTtcbiAgICBcbiAgICBjb25zdCByZXNwb25zZUJvZHkgPSBhd2FpdCByZXN1bHQuanNvbigpO1xuICAgIFxuICAgIC8vIExvZyB0aGUgcmVzcG9uc2UgZm9yIGRlYnVnZ2luZ1xuICAgIGNvbnNvbGUubG9nKCdTaG9waWZ5IEFkbWluIEFQSSBSZXNwb25zZSBTdGF0dXM6JywgcmVzdWx0LnN0YXR1cyk7XG4gICAgaWYgKHJlc3VsdC5zdGF0dXMgIT09IDIwMCkge1xuICAgICAgY29uc29sZS5sb2coJ1Nob3BpZnkgQWRtaW4gQVBJIFJlc3BvbnNlIEVycm9yOicsIHJlc3BvbnNlQm9keSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUubG9nKCdTaG9waWZ5IEFkbWluIEFQSSBTdWNjZXNzISBSZXNwb25zZSBjb250YWlucyBkYXRhLicpO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgc3RhdHVzOiByZXN1bHQuc3RhdHVzLFxuICAgICAgYm9keTogcmVzcG9uc2VCb2R5LFxuICAgIH07XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgZGF0YSBmcm9tIFNob3BpZnkgQWRtaW4gQVBJOicsIGVycm9yKTtcbiAgICByZXR1cm4ge1xuICAgICAgc3RhdHVzOiA1MDAsXG4gICAgICBib2R5OiB7IGVycm9yczogW3sgbWVzc2FnZTogJ0Vycm9yIGZldGNoaW5nIGRhdGEgZnJvbSBTaG9waWZ5IEFkbWluIEFQSScgfV0gfSxcbiAgICB9O1xuICB9XG59O1xuXG4vLyBBUEkgZmV0Y2ggZnVuY3Rpb24gd2l0aCBtdWx0aXBsZSBhdXRoIG9wdGlvbnMgKFN0b3JlZnJvbnQgQVBJKVxuY29uc3Qgc2hvcGlmeUZldGNoID0gYXN5bmMgKHsgcXVlcnksIHZhcmlhYmxlcyB9OiB7IHF1ZXJ5OiBzdHJpbmc7IHZhcmlhYmxlcz86IGFueSB9KSA9PiB7XG4gIHRyeSB7XG4gICAgLy8gU2V0IHVwIHRoZSBBUEkgVVJMIGZvciB0aGUgU3RvcmVmcm9udCBBUEkgKHVzaW5nIDIwMjMtMDcgdmVyc2lvbiBhcyBpdCdzIGtub3duIHRvIGJlIHN0YWJsZSlcbiAgICBjb25zdCBhcGlVcmwgPSBgaHR0cHM6Ly8ke2RvbWFpbn0vYXBpLzIwMjMtMDcvZ3JhcGhxbC5qc29uYDtcbiAgICBcbiAgICAvLyBXZSdsbCB1c2UgYm90aCBhdXRoZW50aWNhdGlvbiBtZXRob2RzIGluIHRoZSBoZWFkZXJzIHRvIHNlZSB3aGljaCBvbmUgd29ya3NcbiAgICBjb25zdCBoZWFkZXJzOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+ID0ge1xuICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICdYLVNob3BpZnktU3RvcmVmcm9udC1BY2Nlc3MtVG9rZW4nOiBzdG9yZWZyb250QWNjZXNzVG9rZW4sXG4gICAgfTtcbiAgICBcbiAgICAvLyBBZGQgYmFzaWMgYXV0aCBpZiBhdmFpbGFibGVcbiAgICBpZiAoYXBpS2V5ICYmIGFwaVNlY3JldCkge1xuICAgICAgY29uc3QgYmFzaWNBdXRoID0gQnVmZmVyLmZyb20oYCR7YXBpS2V5fToke2FwaVNlY3JldH1gKS50b1N0cmluZygnYmFzZTY0Jyk7XG4gICAgICBoZWFkZXJzWydBdXRob3JpemF0aW9uJ10gPSBgQmFzaWMgJHtiYXNpY0F1dGh9YDtcbiAgICB9XG4gICAgXG4gICAgLy8gTG9nIHRoZSByZXF1ZXN0IGluZm9ybWF0aW9uIGZvciBkZWJ1Z2dpbmcgKHNhZmVseSlcbiAgICBjb25zb2xlLmxvZygnU2hvcGlmeSBBUEkgUmVxdWVzdCBVUkw6JywgYXBpVXJsKTtcbiAgICBcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBmZXRjaChhcGlVcmwsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgcXVlcnksIHZhcmlhYmxlcyB9KSxcbiAgICB9KTtcbiAgICBcbiAgICBjb25zdCByZXNwb25zZUJvZHkgPSBhd2FpdCByZXN1bHQuanNvbigpO1xuICAgIFxuICAgIC8vIExvZyB0aGUgcmVzcG9uc2UgZm9yIGRlYnVnZ2luZ1xuICAgIGNvbnNvbGUubG9nKCdTaG9waWZ5IEFQSSBSZXNwb25zZSBTdGF0dXM6JywgcmVzdWx0LnN0YXR1cyk7XG4gICAgaWYgKHJlc3VsdC5zdGF0dXMgIT09IDIwMCkge1xuICAgICAgY29uc29sZS5sb2coJ1Nob3BpZnkgQVBJIFJlc3BvbnNlIEVycm9yczonLCByZXNwb25zZUJvZHkuZXJyb3JzKTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YXR1czogcmVzdWx0LnN0YXR1cyxcbiAgICAgIGJvZHk6IHJlc3BvbnNlQm9keSxcbiAgICB9O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIGRhdGEgZnJvbSBTaG9waWZ5OicsIGVycm9yKTtcbiAgICByZXR1cm4ge1xuICAgICAgc3RhdHVzOiA1MDAsXG4gICAgICBib2R5OiB7IGVycm9yczogW3sgbWVzc2FnZTogJ0Vycm9yIGZldGNoaW5nIGRhdGEgZnJvbSBTaG9waWZ5JyB9XSB9LFxuICAgIH07XG4gIH1cbn07XG5cbi8vIEF0dGVtcHQgdG8gZmV0Y2ggcHJvZHVjdHMgZnJvbSBBZG1pbiBBUEkgYXMgYSBmYWxsYmFja1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFByb2R1Y3RzRnJvbUFkbWluQVBJKCk6IFByb21pc2U8UHJvZHVjdFtdPiB7XG4gIHRyeSB7XG4gICAgY29uc29sZS5sb2coJ0F0dGVtcHRpbmcgdG8gZmV0Y2ggcHJvZHVjdHMgdXNpbmcgQWRtaW4gQVBJLi4uJyk7XG4gICAgXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBzaG9waWZ5QWRtaW5GZXRjaCgncHJvZHVjdHMuanNvbj9saW1pdD01MCcpO1xuICAgIFxuICAgIGlmIChyZXNwb25zZS5zdGF0dXMgIT09IDIwMCB8fCAhcmVzcG9uc2UuYm9keS5wcm9kdWN0cykge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgcHJvZHVjdHMgZnJvbSBBZG1pbiBBUEk6JywgcmVzcG9uc2UuYm9keSk7XG4gICAgICByZXR1cm4gW107XG4gICAgfVxuICAgIFxuICAgIGNvbnNvbGUubG9nKGBTdWNjZXNzZnVsbHkgZmV0Y2hlZCAke3Jlc3BvbnNlLmJvZHkucHJvZHVjdHMubGVuZ3RofSBwcm9kdWN0cyBmcm9tIEFkbWluIEFQSWApO1xuICAgIFxuICAgIGNvbnN0IHByb2R1Y3RzOiBQcm9kdWN0W10gPSByZXNwb25zZS5ib2R5LnByb2R1Y3RzLm1hcCgocHJvZHVjdDogYW55KSA9PiB7XG4gICAgICAvLyBQYXJzZSB0aGUgZmlyc3QgdmFyaWFudCBmb3IgcHJpY2UgaW5mb1xuICAgICAgY29uc3QgZmlyc3RWYXJpYW50ID0gcHJvZHVjdC52YXJpYW50cyAmJiBwcm9kdWN0LnZhcmlhbnRzLmxlbmd0aCA+IDAgXG4gICAgICAgID8gcHJvZHVjdC52YXJpYW50c1swXSBcbiAgICAgICAgOiB7IHByaWNlOiAnMC4wMCcgfTtcbiAgICAgICAgXG4gICAgICAvLyBQYXJzZSBpbWFnZVxuICAgICAgY29uc3QgaW1hZ2UgPSBwcm9kdWN0LmltYWdlcyAmJiBwcm9kdWN0LmltYWdlcy5sZW5ndGggPiAwXG4gICAgICAgID8gcHJvZHVjdC5pbWFnZXNbMF1cbiAgICAgICAgOiBudWxsO1xuICAgICAgICBcbiAgICAgIC8vIE1hcCB0byBvdXIgUHJvZHVjdCB0eXBlXG4gICAgICByZXR1cm4ge1xuICAgICAgICBpZDogcHJvZHVjdC5pZC50b1N0cmluZygpLFxuICAgICAgICB0aXRsZTogcHJvZHVjdC50aXRsZSxcbiAgICAgICAgZGVzY3JpcHRpb246IHByb2R1Y3QuYm9keV9odG1sIHx8ICcnLFxuICAgICAgICBoYW5kbGU6IHByb2R1Y3QuaGFuZGxlLFxuICAgICAgICBkZXNjcmlwdGlvbkh0bWw6IHByb2R1Y3QuYm9keV9odG1sIHx8ICcnLFxuICAgICAgICBwcmljZTogZmlyc3RWYXJpYW50LnByaWNlLFxuICAgICAgICBjdXJyZW5jeUNvZGU6ICdVU0QnLCAvLyBEZWZhdWx0IGN1cnJlbmN5IGNvZGVcbiAgICAgICAgaW1hZ2U6IGltYWdlID8gaW1hZ2Uuc3JjIDogJycsXG4gICAgICAgIGltYWdlQWx0OiBpbWFnZSA/IChpbWFnZS5hbHQgfHwgcHJvZHVjdC50aXRsZSkgOiBwcm9kdWN0LnRpdGxlLFxuICAgICAgICB2YXJpYW50czogcHJvZHVjdC52YXJpYW50cy5tYXAoKHZhcmlhbnQ6IGFueSk6IFByb2R1Y3RWYXJpYW50ID0+ICh7XG4gICAgICAgICAgaWQ6IHZhcmlhbnQuaWQudG9TdHJpbmcoKSxcbiAgICAgICAgICB0aXRsZTogdmFyaWFudC50aXRsZSxcbiAgICAgICAgICBwcmljZTogdmFyaWFudC5wcmljZSxcbiAgICAgICAgICBjdXJyZW5jeUNvZGU6ICdVU0QnLCAvLyBEZWZhdWx0IGN1cnJlbmN5IGNvZGVcbiAgICAgICAgICBhdmFpbGFibGVGb3JTYWxlOiB2YXJpYW50LmF2YWlsYWJsZSxcbiAgICAgICAgfSkpLFxuICAgICAgfTtcbiAgICB9KTtcbiAgICBcbiAgICByZXR1cm4gcHJvZHVjdHM7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gZ2V0UHJvZHVjdHNGcm9tQWRtaW5BUEk6JywgZXJyb3IpO1xuICAgIHJldHVybiBbXTtcbiAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QWxsUHJvZHVjdHMoKTogUHJvbWlzZTxQcm9kdWN0W10+IHtcbiAgLy8gSWYgaW4gZGV2ZWxvcG1lbnQgbW9kZSwgcmV0dXJuIHNhbXBsZSBwcm9kdWN0cyBpbnN0ZWFkXG4gIGlmIChERVZFTE9QTUVOVF9NT0RFKSB7XG4gICAgY29uc29sZS5sb2coJ1VzaW5nIHNhbXBsZSBwcm9kdWN0cyBmb3IgZGV2ZWxvcG1lbnQnKTtcbiAgICAvLyBTaW11bGF0ZSBBUEkgZGVsYXkgZm9yIG1vcmUgcmVhbGlzdGljIGRldmVsb3BtZW50XG4gICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDUwMCkpO1xuICAgIHJldHVybiBzYW1wbGVQcm9kdWN0cztcbiAgfVxuXG4gIC8vIElmIG5vdCBpbiBkZXZlbG9wbWVudCBtb2RlLCB0cnkgdXNpbmcgdGhlIFN0b3JlZnJvbnQgQVBJXG4gIGNvbnN0IHF1ZXJ5ID0gYFxuICAgIHF1ZXJ5IEdldEFsbFByb2R1Y3RzIHtcbiAgICAgIHByb2R1Y3RzKGZpcnN0OiAxMDApIHtcbiAgICAgICAgZWRnZXMge1xuICAgICAgICAgIG5vZGUge1xuICAgICAgICAgICAgaWRcbiAgICAgICAgICAgIHRpdGxlXG4gICAgICAgICAgICBkZXNjcmlwdGlvblxuICAgICAgICAgICAgaGFuZGxlXG4gICAgICAgICAgICBwcmljZVJhbmdlIHtcbiAgICAgICAgICAgICAgbWluVmFyaWFudFByaWNlIHtcbiAgICAgICAgICAgICAgICBhbW91bnRcbiAgICAgICAgICAgICAgICBjdXJyZW5jeUNvZGVcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaW1hZ2VzKGZpcnN0OiAxKSB7XG4gICAgICAgICAgICAgIGVkZ2VzIHtcbiAgICAgICAgICAgICAgICBub2RlIHtcbiAgICAgICAgICAgICAgICAgIHVybFxuICAgICAgICAgICAgICAgICAgYWx0VGV4dFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyaWFudHMoZmlyc3Q6IDEwMCkge1xuICAgICAgICAgICAgICBlZGdlcyB7XG4gICAgICAgICAgICAgICAgbm9kZSB7XG4gICAgICAgICAgICAgICAgICBpZFxuICAgICAgICAgICAgICAgICAgdGl0bGVcbiAgICAgICAgICAgICAgICAgIHByaWNlIHtcbiAgICAgICAgICAgICAgICAgICAgYW1vdW50XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbmN5Q29kZVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgYXZhaWxhYmxlRm9yU2FsZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgYDtcblxuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHNob3BpZnlGZXRjaCh7IHF1ZXJ5IH0pO1xuICBcbiAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwICYmIHJlc3BvbnNlLmJvZHkuZGF0YSAmJiByZXNwb25zZS5ib2R5LmRhdGEucHJvZHVjdHMpIHtcbiAgICBjb25zb2xlLmxvZygnU3VjY2Vzc2Z1bGx5IGZldGNoZWQgcHJvZHVjdHMgdXNpbmcgU3RvcmVmcm9udCBBUEknKTtcbiAgICBcbiAgICBjb25zdCBwcm9kdWN0cyA9IHJlc3BvbnNlLmJvZHkuZGF0YS5wcm9kdWN0cy5lZGdlcy5tYXAoKHsgbm9kZSB9OiBhbnkpID0+IHtcbiAgICAgIGNvbnN0IHByb2R1Y3Q6IFByb2R1Y3QgPSB7XG4gICAgICAgIGlkOiBub2RlLmlkLFxuICAgICAgICB0aXRsZTogbm9kZS50aXRsZSxcbiAgICAgICAgZGVzY3JpcHRpb246IG5vZGUuZGVzY3JpcHRpb24sXG4gICAgICAgIGhhbmRsZTogbm9kZS5oYW5kbGUsXG4gICAgICAgIHByaWNlOiBub2RlLnByaWNlUmFuZ2UubWluVmFyaWFudFByaWNlLmFtb3VudCxcbiAgICAgICAgY3VycmVuY3lDb2RlOiBub2RlLnByaWNlUmFuZ2UubWluVmFyaWFudFByaWNlLmN1cnJlbmN5Q29kZSxcbiAgICAgICAgaW1hZ2U6IG5vZGUuaW1hZ2VzLmVkZ2VzWzBdPy5ub2RlLnVybCB8fCAnJyxcbiAgICAgICAgaW1hZ2VBbHQ6IG5vZGUuaW1hZ2VzLmVkZ2VzWzBdPy5ub2RlLmFsdFRleHQgfHwgbm9kZS50aXRsZSxcbiAgICAgICAgdmFyaWFudHM6IG5vZGUudmFyaWFudHMuZWRnZXMubWFwKCh7IG5vZGU6IHZhcmlhbnQgfTogYW55KTogUHJvZHVjdFZhcmlhbnQgPT4gKHtcbiAgICAgICAgICBpZDogdmFyaWFudC5pZCxcbiAgICAgICAgICB0aXRsZTogdmFyaWFudC50aXRsZSxcbiAgICAgICAgICBwcmljZTogdmFyaWFudC5wcmljZS5hbW91bnQsXG4gICAgICAgICAgY3VycmVuY3lDb2RlOiB2YXJpYW50LnByaWNlLmN1cnJlbmN5Q29kZSxcbiAgICAgICAgICBhdmFpbGFibGVGb3JTYWxlOiB2YXJpYW50LmF2YWlsYWJsZUZvclNhbGUsXG4gICAgICAgIH0pKSxcbiAgICAgIH07XG4gICAgICByZXR1cm4gcHJvZHVjdDtcbiAgICB9KTtcblxuICAgIHJldHVybiBwcm9kdWN0cztcbiAgfVxuICBcbiAgLy8gSWYgU3RvcmVmcm9udCBBUEkgZmFpbHMsIHRyeSB0aGUgQWRtaW4gQVBJXG4gIGNvbnNvbGUubG9nKCdTdG9yZWZyb250IEFQSSBmYWlsZWQsIGZhbGxpbmcgYmFjayB0byBBZG1pbiBBUEkuLi4nKTtcbiAgY29uc29sZS5lcnJvcignU3RvcmVmcm9udCBBUEkgZXJyb3I6JywgcmVzcG9uc2UuYm9keS5lcnJvcnMpO1xuICBcbiAgcmV0dXJuIGdldFByb2R1Y3RzRnJvbUFkbWluQVBJKCk7XG59XG5cbi8vIEdldCBhIHNpbmdsZSBwcm9kdWN0IGJ5IGhhbmRsZSBmcm9tIEFkbWluIEFQSVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFByb2R1Y3RCeUhhbmRsZUZyb21BZG1pbkFQSShoYW5kbGU6IHN0cmluZyk6IFByb21pc2U8UHJvZHVjdCB8IG51bGw+IHtcbiAgdHJ5IHtcbiAgICBjb25zb2xlLmxvZyhgQXR0ZW1wdGluZyB0byBmZXRjaCBwcm9kdWN0IHdpdGggaGFuZGxlIFwiJHtoYW5kbGV9XCIgdXNpbmcgQWRtaW4gQVBJLi4uYCk7XG4gICAgXG4gICAgLy8gRmlyc3Qgd2UgbmVlZCB0byBnZXQgYWxsIHByb2R1Y3RzIGFzIEFkbWluIEFQSSBkb2Vzbid0IHN1cHBvcnQgZGlyZWN0IGhhbmRsZSBsb29rdXBcbiAgICBjb25zdCBwcm9kdWN0c1Jlc3BvbnNlID0gYXdhaXQgc2hvcGlmeUFkbWluRmV0Y2goJ3Byb2R1Y3RzLmpzb24/aGFuZGxlPScgKyBoYW5kbGUpO1xuICAgIFxuICAgIGlmIChwcm9kdWN0c1Jlc3BvbnNlLnN0YXR1cyAhPT0gMjAwIHx8ICFwcm9kdWN0c1Jlc3BvbnNlLmJvZHkucHJvZHVjdHMgfHwgcHJvZHVjdHNSZXNwb25zZS5ib2R5LnByb2R1Y3RzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgcHJvZHVjdCBieSBoYW5kbGUgZnJvbSBBZG1pbiBBUEk6JywgcHJvZHVjdHNSZXNwb25zZS5ib2R5KTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBcbiAgICBjb25zdCBwcm9kdWN0ID0gcHJvZHVjdHNSZXNwb25zZS5ib2R5LnByb2R1Y3RzWzBdOyAvLyBTaG91bGQgYmUganVzdCBvbmVcbiAgICBjb25zb2xlLmxvZyhgU3VjY2Vzc2Z1bGx5IGZldGNoZWQgcHJvZHVjdCBcIiR7cHJvZHVjdC50aXRsZX1cIiBmcm9tIEFkbWluIEFQSWApO1xuICAgICAgICBcbiAgICAvLyBQYXJzZSB0aGUgZmlyc3QgdmFyaWFudCBmb3IgcHJpY2UgaW5mb1xuICAgIGNvbnN0IGZpcnN0VmFyaWFudCA9IHByb2R1Y3QudmFyaWFudHMgJiYgcHJvZHVjdC52YXJpYW50cy5sZW5ndGggPiAwIFxuICAgICAgPyBwcm9kdWN0LnZhcmlhbnRzWzBdIFxuICAgICAgOiB7IHByaWNlOiAnMC4wMCcgfTtcbiAgICAgIFxuICAgIC8vIFBhcnNlIGltYWdlc1xuICAgIGNvbnN0IGltYWdlcyA9IHByb2R1Y3QuaW1hZ2VzICYmIHByb2R1Y3QuaW1hZ2VzLmxlbmd0aCA+IDAgXG4gICAgICA/IHByb2R1Y3QuaW1hZ2VzLm1hcCgoaW1nOiBhbnkpID0+ICh7XG4gICAgICAgICAgdXJsOiBpbWcuc3JjLFxuICAgICAgICAgIGFsdFRleHQ6IGltZy5hbHQgfHwgcHJvZHVjdC50aXRsZSxcbiAgICAgICAgICB3aWR0aDogaW1nLndpZHRoLFxuICAgICAgICAgIGhlaWdodDogaW1nLmhlaWdodCxcbiAgICAgICAgfSkpXG4gICAgICA6IFtdO1xuICAgIFxuICAgIC8vIE1hcCB0byBvdXIgUHJvZHVjdCB0eXBlXG4gICAgcmV0dXJuIHtcbiAgICAgIGlkOiBwcm9kdWN0LmlkLnRvU3RyaW5nKCksXG4gICAgICB0aXRsZTogcHJvZHVjdC50aXRsZSxcbiAgICAgIGRlc2NyaXB0aW9uOiBwcm9kdWN0LmJvZHlfaHRtbCB8fCAnJyxcbiAgICAgIGhhbmRsZTogcHJvZHVjdC5oYW5kbGUsXG4gICAgICBkZXNjcmlwdGlvbkh0bWw6IHByb2R1Y3QuYm9keV9odG1sIHx8ICcnLFxuICAgICAgcHJpY2U6IGZpcnN0VmFyaWFudC5wcmljZSxcbiAgICAgIGN1cnJlbmN5Q29kZTogJ1VTRCcsIC8vIERlZmF1bHQgY3VycmVuY3kgY29kZVxuICAgICAgaW1hZ2VzLFxuICAgICAgaW1hZ2U6IGltYWdlcy5sZW5ndGggPiAwID8gaW1hZ2VzWzBdLnVybCA6ICcnLFxuICAgICAgaW1hZ2VBbHQ6IGltYWdlcy5sZW5ndGggPiAwID8gaW1hZ2VzWzBdLmFsdFRleHQgOiBwcm9kdWN0LnRpdGxlLFxuICAgICAgdmFyaWFudHM6IHByb2R1Y3QudmFyaWFudHMubWFwKCh2YXJpYW50OiBhbnkpOiBQcm9kdWN0VmFyaWFudCA9PiAoe1xuICAgICAgICBpZDogdmFyaWFudC5pZC50b1N0cmluZygpLFxuICAgICAgICB0aXRsZTogdmFyaWFudC50aXRsZSxcbiAgICAgICAgcHJpY2U6IHZhcmlhbnQucHJpY2UsXG4gICAgICAgIGN1cnJlbmN5Q29kZTogJ1VTRCcsIC8vIERlZmF1bHQgY3VycmVuY3kgY29kZVxuICAgICAgICBhdmFpbGFibGVGb3JTYWxlOiB2YXJpYW50LmF2YWlsYWJsZSxcbiAgICAgIH0pKSxcbiAgICB9O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluIGdldFByb2R1Y3RCeUhhbmRsZUZyb21BZG1pbkFQSTonLCBlcnJvcik7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFByb2R1Y3RCeUhhbmRsZShoYW5kbGU6IHN0cmluZyk6IFByb21pc2U8UHJvZHVjdCB8IG51bGw+IHtcbiAgLy8gSWYgaW4gZGV2ZWxvcG1lbnQgbW9kZSwgcmV0dXJuIHNhbXBsZSBwcm9kdWN0IGluc3RlYWRcbiAgaWYgKERFVkVMT1BNRU5UX01PREUpIHtcbiAgICBjb25zb2xlLmxvZyhgVXNpbmcgc2FtcGxlIHByb2R1Y3Qgd2l0aCBoYW5kbGUgXCIke2hhbmRsZX1cIiBmb3IgZGV2ZWxvcG1lbnRgKTtcbiAgICAvLyBTaW11bGF0ZSBBUEkgZGVsYXkgZm9yIG1vcmUgcmVhbGlzdGljIGRldmVsb3BtZW50XG4gICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDUwMCkpO1xuICAgIHJldHVybiBnZXRTYW1wbGVQcm9kdWN0QnlIYW5kbGUoaGFuZGxlKTtcbiAgfVxuXG4gIC8vIElmIG5vdCBpbiBkZXZlbG9wbWVudCBtb2RlLCB0cnkgdXNpbmcgdGhlIFN0b3JlZnJvbnQgQVBJXG4gIGNvbnN0IHF1ZXJ5ID0gYFxuICAgIHF1ZXJ5IEdldFByb2R1Y3RCeUhhbmRsZSgkaGFuZGxlOiBTdHJpbmchKSB7XG4gICAgICBwcm9kdWN0QnlIYW5kbGUoaGFuZGxlOiAkaGFuZGxlKSB7XG4gICAgICAgIGlkXG4gICAgICAgIHRpdGxlXG4gICAgICAgIGRlc2NyaXB0aW9uXG4gICAgICAgIGhhbmRsZVxuICAgICAgICBkZXNjcmlwdGlvbkh0bWxcbiAgICAgICAgcHJpY2VSYW5nZSB7XG4gICAgICAgICAgbWluVmFyaWFudFByaWNlIHtcbiAgICAgICAgICAgIGFtb3VudFxuICAgICAgICAgICAgY3VycmVuY3lDb2RlXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGltYWdlcyhmaXJzdDogMTApIHtcbiAgICAgICAgICBlZGdlcyB7XG4gICAgICAgICAgICBub2RlIHtcbiAgICAgICAgICAgICAgdXJsXG4gICAgICAgICAgICAgIGFsdFRleHRcbiAgICAgICAgICAgICAgd2lkdGhcbiAgICAgICAgICAgICAgaGVpZ2h0XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHZhcmlhbnRzKGZpcnN0OiAxMDApIHtcbiAgICAgICAgICBlZGdlcyB7XG4gICAgICAgICAgICBub2RlIHtcbiAgICAgICAgICAgICAgaWRcbiAgICAgICAgICAgICAgdGl0bGVcbiAgICAgICAgICAgICAgcHJpY2Uge1xuICAgICAgICAgICAgICAgIGFtb3VudFxuICAgICAgICAgICAgICAgIGN1cnJlbmN5Q29kZVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGF2YWlsYWJsZUZvclNhbGVcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgdmFyaWFibGVzID0geyBoYW5kbGUgfTtcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBzaG9waWZ5RmV0Y2goeyBxdWVyeSwgdmFyaWFibGVzIH0pO1xuXG4gIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDIwMCAmJiByZXNwb25zZS5ib2R5LmRhdGEgJiYgcmVzcG9uc2UuYm9keS5kYXRhLnByb2R1Y3RCeUhhbmRsZSkge1xuICAgIGNvbnNvbGUubG9nKCdTdWNjZXNzZnVsbHkgZmV0Y2hlZCBwcm9kdWN0IHVzaW5nIFN0b3JlZnJvbnQgQVBJJyk7XG4gICAgXG4gICAgY29uc3QgcHJvZHVjdCA9IHJlc3BvbnNlLmJvZHkuZGF0YS5wcm9kdWN0QnlIYW5kbGU7XG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgIGlkOiBwcm9kdWN0LmlkLFxuICAgICAgdGl0bGU6IHByb2R1Y3QudGl0bGUsXG4gICAgICBkZXNjcmlwdGlvbjogcHJvZHVjdC5kZXNjcmlwdGlvbixcbiAgICAgIGhhbmRsZTogcHJvZHVjdC5oYW5kbGUsXG4gICAgICBkZXNjcmlwdGlvbkh0bWw6IHByb2R1Y3QuZGVzY3JpcHRpb25IdG1sLFxuICAgICAgcHJpY2U6IHByb2R1Y3QucHJpY2VSYW5nZS5taW5WYXJpYW50UHJpY2UuYW1vdW50LFxuICAgICAgY3VycmVuY3lDb2RlOiBwcm9kdWN0LnByaWNlUmFuZ2UubWluVmFyaWFudFByaWNlLmN1cnJlbmN5Q29kZSxcbiAgICAgIGltYWdlczogcHJvZHVjdC5pbWFnZXMuZWRnZXMubWFwKCh7IG5vZGUgfTogYW55KSA9PiAoe1xuICAgICAgICB1cmw6IG5vZGUudXJsLFxuICAgICAgICBhbHRUZXh0OiBub2RlLmFsdFRleHQgfHwgcHJvZHVjdC50aXRsZSxcbiAgICAgICAgd2lkdGg6IG5vZGUud2lkdGgsXG4gICAgICAgIGhlaWdodDogbm9kZS5oZWlnaHQsXG4gICAgICB9KSksXG4gICAgICBpbWFnZTogcHJvZHVjdC5pbWFnZXMuZWRnZXNbMF0/Lm5vZGUudXJsIHx8ICcnLFxuICAgICAgaW1hZ2VBbHQ6IHByb2R1Y3QuaW1hZ2VzLmVkZ2VzWzBdPy5ub2RlLmFsdFRleHQgfHwgcHJvZHVjdC50aXRsZSxcbiAgICAgIHZhcmlhbnRzOiBwcm9kdWN0LnZhcmlhbnRzLmVkZ2VzLm1hcCgoeyBub2RlOiB2YXJpYW50IH06IGFueSk6IFByb2R1Y3RWYXJpYW50ID0+ICh7XG4gICAgICAgIGlkOiB2YXJpYW50LmlkLFxuICAgICAgICB0aXRsZTogdmFyaWFudC50aXRsZSxcbiAgICAgICAgcHJpY2U6IHZhcmlhbnQucHJpY2UuYW1vdW50LFxuICAgICAgICBjdXJyZW5jeUNvZGU6IHZhcmlhbnQucHJpY2UuY3VycmVuY3lDb2RlLFxuICAgICAgICBhdmFpbGFibGVGb3JTYWxlOiB2YXJpYW50LmF2YWlsYWJsZUZvclNhbGUsXG4gICAgICB9KSksXG4gICAgfTtcbiAgfVxuICBcbiAgLy8gSWYgU3RvcmVmcm9udCBBUEkgZmFpbHMsIHRyeSB0aGUgQWRtaW4gQVBJXG4gIGNvbnNvbGUubG9nKCdTdG9yZWZyb250IEFQSSBmYWlsZWQgdG8gZmV0Y2ggcHJvZHVjdCwgZmFsbGluZyBiYWNrIHRvIEFkbWluIEFQSS4uLicpO1xuICBjb25zb2xlLmVycm9yKCdTdG9yZWZyb250IEFQSSBlcnJvcjonLCByZXNwb25zZS5ib2R5LmVycm9ycyk7XG4gIFxuICByZXR1cm4gZ2V0UHJvZHVjdEJ5SGFuZGxlRnJvbUFkbWluQVBJKGhhbmRsZSk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVDaGVja291dChjYXJ0SXRlbXM6IENhcnRJdGVtW10pOiBQcm9taXNlPHN0cmluZyB8IG51bGw+IHtcbiAgLy8gSWYgaW4gZGV2ZWxvcG1lbnQgbW9kZSwgcmV0dXJuIGZha2UgY2hlY2tvdXQgVVJMXG4gIGlmIChERVZFTE9QTUVOVF9NT0RFKSB7XG4gICAgY29uc29sZS5sb2coJ1VzaW5nIHNhbXBsZSBjaGVja291dCBmb3IgZGV2ZWxvcG1lbnQnKTtcbiAgICBjb25zb2xlLmxvZygnQ2FydCBpdGVtczonLCBjYXJ0SXRlbXMpO1xuICAgIFxuICAgIC8vIFNpbXVsYXRlIEFQSSBkZWxheVxuICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCA4MDApKTtcbiAgICBcbiAgICAvLyBSZXR1cm4gYSBmYWtlIGNoZWNrb3V0IFVSTCBmb3IgZGV2ZWxvcG1lbnRcbiAgICByZXR1cm4gJ2h0dHBzOi8vY2hlY2tvdXQuc2hvcGlmeS5jb20vZGV2ZWxvcG1lbnQtbW9kZS9zYW1wbGUtY2hlY2tvdXQnO1xuICB9XG4gIFxuICAvLyBGb3IgcHJvZHVjdGlvbiBtb2RlLCB1c2UgdGhlIHJlYWwgU2hvcGlmeSBBUElcbiAgY29uc3QgbGluZUl0ZW1zID0gY2FydEl0ZW1zLm1hcChpdGVtID0+ICh7XG4gICAgdmFyaWFudElkOiBpdGVtLnZhcmlhbnRJZCxcbiAgICBxdWFudGl0eTogaXRlbS5xdWFudGl0eSxcbiAgfSkpO1xuXG4gIGNvbnN0IHF1ZXJ5ID0gYFxuICAgIG11dGF0aW9uIENoZWNrb3V0Q3JlYXRlKCRpbnB1dDogQ2hlY2tvdXRDcmVhdGVJbnB1dCEpIHtcbiAgICAgIGNoZWNrb3V0Q3JlYXRlKGlucHV0OiAkaW5wdXQpIHtcbiAgICAgICAgY2hlY2tvdXQge1xuICAgICAgICAgIGlkXG4gICAgICAgICAgd2ViVXJsXG4gICAgICAgIH1cbiAgICAgICAgY2hlY2tvdXRVc2VyRXJyb3JzIHtcbiAgICAgICAgICBjb2RlXG4gICAgICAgICAgZmllbGRcbiAgICAgICAgICBtZXNzYWdlXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgdmFyaWFibGVzID0ge1xuICAgIGlucHV0OiB7XG4gICAgICBsaW5lSXRlbXMsXG4gICAgfSxcbiAgfTtcblxuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHNob3BpZnlGZXRjaCh7IHF1ZXJ5LCB2YXJpYWJsZXMgfSk7XG5cbiAgaWYgKHJlc3BvbnNlLnN0YXR1cyAhPT0gMjAwIHx8IHJlc3BvbnNlLmJvZHkuZGF0YT8uY2hlY2tvdXRDcmVhdGU/LmNoZWNrb3V0VXNlckVycm9ycz8ubGVuZ3RoID4gMCkge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGNyZWF0aW5nIGNoZWNrb3V0OicsIHJlc3BvbnNlLmJvZHkuZXJyb3JzIHx8IHJlc3BvbnNlLmJvZHkuZGF0YT8uY2hlY2tvdXRDcmVhdGU/LmNoZWNrb3V0VXNlckVycm9ycyk7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4gcmVzcG9uc2UuYm9keS5kYXRhLmNoZWNrb3V0Q3JlYXRlLmNoZWNrb3V0LndlYlVybDtcbn1cbiJdLCJuYW1lcyI6WyJzYW1wbGVQcm9kdWN0cyIsImdldFNhbXBsZVByb2R1Y3RCeUhhbmRsZSIsIkRFVkVMT1BNRU5UX01PREUiLCJkb21haW4iLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU0hPUElGWV9TVE9SRV9ET01BSU4iLCJ0cmltIiwic3RvcmVmcm9udEFjY2Vzc1Rva2VuIiwiTkVYVF9QVUJMSUNfU0hPUElGWV9TVE9SRUZST05UX0FDQ0VTU19UT0tFTiIsImFwaUtleSIsIlNIT1BJRllfQVBJX0tFWSIsImFwaVNlY3JldCIsIlNIT1BJRllfQVBJX1NFQ1JFVCIsInN0b3JlUGFzc3dvcmQiLCJTSE9QSUZZX1NUT1JFX1BBU1NXT1JEIiwiY29uc29sZSIsImxvZyIsInNob3BpZnlBZG1pbkZldGNoIiwiZW5kcG9pbnQiLCJhcGlVcmwiLCJiYXNpY0F1dGgiLCJCdWZmZXIiLCJmcm9tIiwidG9TdHJpbmciLCJyZXN1bHQiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJyZXNwb25zZUJvZHkiLCJqc29uIiwic3RhdHVzIiwiYm9keSIsImVycm9yIiwiZXJyb3JzIiwibWVzc2FnZSIsInNob3BpZnlGZXRjaCIsInF1ZXJ5IiwidmFyaWFibGVzIiwiSlNPTiIsInN0cmluZ2lmeSIsImdldFByb2R1Y3RzRnJvbUFkbWluQVBJIiwicmVzcG9uc2UiLCJwcm9kdWN0cyIsImxlbmd0aCIsIm1hcCIsInByb2R1Y3QiLCJmaXJzdFZhcmlhbnQiLCJ2YXJpYW50cyIsInByaWNlIiwiaW1hZ2UiLCJpbWFnZXMiLCJpZCIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJib2R5X2h0bWwiLCJoYW5kbGUiLCJkZXNjcmlwdGlvbkh0bWwiLCJjdXJyZW5jeUNvZGUiLCJzcmMiLCJpbWFnZUFsdCIsImFsdCIsInZhcmlhbnQiLCJhdmFpbGFibGVGb3JTYWxlIiwiYXZhaWxhYmxlIiwiZ2V0QWxsUHJvZHVjdHMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiLCJkYXRhIiwiZWRnZXMiLCJub2RlIiwicHJpY2VSYW5nZSIsIm1pblZhcmlhbnRQcmljZSIsImFtb3VudCIsInVybCIsImFsdFRleHQiLCJnZXRQcm9kdWN0QnlIYW5kbGVGcm9tQWRtaW5BUEkiLCJwcm9kdWN0c1Jlc3BvbnNlIiwiaW1nIiwid2lkdGgiLCJoZWlnaHQiLCJnZXRQcm9kdWN0QnlIYW5kbGUiLCJwcm9kdWN0QnlIYW5kbGUiLCJjcmVhdGVDaGVja291dCIsImNhcnRJdGVtcyIsImxpbmVJdGVtcyIsIml0ZW0iLCJ2YXJpYW50SWQiLCJxdWFudGl0eSIsImlucHV0IiwiY2hlY2tvdXRDcmVhdGUiLCJjaGVja291dFVzZXJFcnJvcnMiLCJjaGVja291dCIsIndlYlVybCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/lib/shopify.ts\n"));

/***/ }),

/***/ "(pages-dir-browser)/./src/pages/_app.tsx":
/*!****************************!*\
  !*** ./src/pages/_app.tsx ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ App)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/styles/globals.css */ \"(pages-dir-browser)/./src/styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_Layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/Layout */ \"(pages-dir-browser)/./src/components/Layout.tsx\");\n/* harmony import */ var _context_CartContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/context/CartContext */ \"(pages-dir-browser)/./src/context/CartContext.tsx\");\n\n\n\n\nfunction App(param) {\n    let { Component, pageProps } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_CartContext__WEBPACK_IMPORTED_MODULE_3__.CartProvider, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Layout__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                ...pageProps\n            }, void 0, false, {\n                fileName: \"/home/runner/workspace/src/pages/_app.tsx\",\n                lineNumber: 10,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/home/runner/workspace/src/pages/_app.tsx\",\n            lineNumber: 9,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/home/runner/workspace/src/pages/_app.tsx\",\n        lineNumber: 8,\n        columnNumber: 5\n    }, this);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy9wYWdlcy9fYXBwLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUE4QjtBQUVXO0FBQ1k7QUFFdEMsU0FBU0UsSUFBSSxLQUFrQztRQUFsQyxFQUFFQyxTQUFTLEVBQUVDLFNBQVMsRUFBWSxHQUFsQztJQUMxQixxQkFDRSw4REFBQ0gsOERBQVlBO2tCQUNYLDRFQUFDRCwwREFBTUE7c0JBQ0wsNEVBQUNHO2dCQUFXLEdBQUdDLFNBQVM7Ozs7Ozs7Ozs7Ozs7Ozs7QUFJaEM7S0FSd0JGIiwic291cmNlcyI6WyIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL3NyYy9wYWdlcy9fYXBwLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ0Avc3R5bGVzL2dsb2JhbHMuY3NzJztcbmltcG9ydCB0eXBlIHsgQXBwUHJvcHMgfSBmcm9tICduZXh0L2FwcCc7XG5pbXBvcnQgTGF5b3V0IGZyb20gJ0AvY29tcG9uZW50cy9MYXlvdXQnO1xuaW1wb3J0IHsgQ2FydFByb3ZpZGVyIH0gZnJvbSAnQC9jb250ZXh0L0NhcnRDb250ZXh0JztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQXBwKHsgQ29tcG9uZW50LCBwYWdlUHJvcHMgfTogQXBwUHJvcHMpIHtcbiAgcmV0dXJuIChcbiAgICA8Q2FydFByb3ZpZGVyPlxuICAgICAgPExheW91dD5cbiAgICAgICAgPENvbXBvbmVudCB7Li4ucGFnZVByb3BzfSAvPlxuICAgICAgPC9MYXlvdXQ+XG4gICAgPC9DYXJ0UHJvdmlkZXI+XG4gICk7XG59XG4iXSwibmFtZXMiOlsiTGF5b3V0IiwiQ2FydFByb3ZpZGVyIiwiQXBwIiwiQ29tcG9uZW50IiwicGFnZVByb3BzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/pages/_app.tsx\n"));

/***/ })

});